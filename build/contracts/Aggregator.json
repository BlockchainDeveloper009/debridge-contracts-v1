{
  "contractName": "Aggregator",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minConfirmations",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_corePayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bonusPayment",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_coreToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_bonusToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ORACLE_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusPayment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "corePayment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "coreToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getOracleInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPaymentInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "allocatedFunds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "availableFunds",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOracleAdmin",
          "type": "address"
        }
      ],
      "name": "updateOracleAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "updateAvailableFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minConfirmations",
          "type": "uint256"
        }
      ],
      "name": "setMinConfirmations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_corePayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bonusPayment",
          "type": "uint256"
        }
      ],
      "name": "setPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "addOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "removeOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "getWithdrawable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_corePayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusPayment\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_coreToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_bonusToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"corePayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coreToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getOracleInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPaymentInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocatedFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableFunds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"getWithdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"removeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minConfirmations\",\"type\":\"uint256\"}],\"name\":\"setMinConfirmations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_corePayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusPayment\",\"type\":\"uint256\"}],\"name\":\"setPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"updateAvailableFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOracleAdmin\",\"type\":\"address\"}],\"name\":\"updateOracleAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addOracle(address,address)\":{\"details\":\"Add new oracle.\",\"params\":{\"_admin\":\"Admin address.\",\"_oracle\":\"Oracle address.\"}},\"constructor\":{\"details\":\"Constructor that initializes the most important configurations.\",\"params\":{\"_bonusPayment\":\"Oracle reward.\",\"_bonusToken\":\"DBR token to pay to oracles.\",\"_corePayment\":\"Oracle reward.\",\"_coreToken\":\"Link token to pay to oracles.\",\"_minConfirmations\":\"Common confirmations count.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getWithdrawable(address,address)\":{\"details\":\"Return's oracle reward.\",\"params\":{\"_oracle\":\"Oracle address.\"},\"returns\":{\"_0\":\"Oracle rewards.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"details\":\"Updates link balance.\",\"params\":{\"_data\":\"Call data.\"}},\"removeOracle(address)\":{\"details\":\"Remove oracle.\",\"params\":{\"_oracle\":\"Oracle address.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setMinConfirmations(uint256)\":{\"details\":\"Sets minimal required confirmations.\",\"params\":{\"_minConfirmations\":\"Confirmation info.\"}},\"setPayment(uint256,uint256)\":{\"details\":\"Sets new oracle reward.\",\"params\":{\"_bonusPayment\":\"Oracle reward.\",\"_corePayment\":\"Oracle reward.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateAvailableFunds(address)\":{\"details\":\"Updates available rewards to be distributed.\"},\"updateOracleAdmin(address,address)\":{\"details\":\"Updates oracle's admin address.\",\"params\":{\"_newOracleAdmin\":\"New oracle address.\",\"_oracle\":\"Oracle address.\"}},\"withdrawFunds(address,address,uint256)\":{\"details\":\"Withdraws earned LINK's.\",\"params\":{\"_amount\":\"Amount to withdraw.\",\"_recipient\":\"Reward's recepient.\"}},\"withdrawPayment(address,address,address,uint256)\":{\"details\":\"Withdraws oracle reward.\",\"params\":{\"_amount\":\"Amount to withdraw.\",\"_oracle\":\"Oracle address.\",\"_recipient\":\"Recepient reward.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/root/debridge-contracts/contracts/chainlink/Aggregator.sol\":\"Aggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/root/debridge-contracts/contracts/chainlink/Aggregator.sol\":{\"keccak256\":\"0x16a9a8553fa990d4fb7248486a2b8f1c5df62e09e708a7f2bc38dad47f6860c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8f55d47777b1c1bf5c2adfc276ccbcc764dfa43fd0ca2e05248adc334702da8\",\"dweb:/ipfs/QmPdxUajecNcsXRAtmBgCQrgSaYzrjvAthGujk591D9uYA\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x897b526c3c1b6196d7c2202b3dbb04b77513a40633c6083a00e8c11402011710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9a87494f94cba588431ee0600b51a4122d93d7f5e081dbf0c49ad09b394c5bf\",\"dweb:/ipfs/QmSuMSXPnbEKi8yLNXAagtaX5YbJaiuuKRdCH9S5BxQdRH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:740:45",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:45",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "82:117:45",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "92:22:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "107:6:45"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "101:13:45"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "92:5:45"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "177:16:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "186:1:45",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "189:1:45",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "179:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "179:12:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "179:12:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "136:5:45"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "147:5:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "162:3:45",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "167:1:45",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "158:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "158:11:45"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "171:1:45",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "154:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "154:19:45"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "143:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "143:31:45"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "133:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "133:42:45"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "126:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "126:50:45"
                  },
                  "nodeType": "YulIf",
                  "src": "123:2:45"
                }
              ]
            },
            "name": "abi_decode_contract_IERC20_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "61:6:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "72:5:45",
                "type": ""
              }
            ],
            "src": "14:185:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "383:355:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "430:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "439:6:45"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "447:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "432:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "432:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "432:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "404:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "413:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "400:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "400:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "425:3:45",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "396:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:33:45"
                  },
                  "nodeType": "YulIf",
                  "src": "393:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "465:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "481:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "475:5:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "475:16:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "465:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "500:35:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "520:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "531:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "516:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "516:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "510:5:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:25:45"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "500:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "544:35:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "564:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "575:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "560:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "560:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "554:5:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "554:25:45"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "544:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "588:67:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "640:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "651:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "636:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "636:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_contract_IERC20_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "598:37:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "598:57:45"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "588:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "664:68:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "716:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "727:3:45",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "712:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "712:19:45"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_contract_IERC20_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "674:37:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:58:45"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "664:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_contract$_IERC20_$8706t_contract$_IERC20_$8706_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "317:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "328:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "340:6:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "348:6:45",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "356:6:45",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "364:6:45",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "372:6:45",
                "type": ""
              }
            ],
            "src": "204:534:45"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_contract_IERC20_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_contract$_IERC20_$8706t_contract$_IERC20_$8706_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := abi_decode_contract_IERC20_fromMemory(add(headStart, 96))\n        value4 := abi_decode_contract_IERC20_fromMemory(add(headStart, 128))\n    }\n}",
      "id": 45,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10979:45",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:45",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:187:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "235:5:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:31:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:31:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "250:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "260:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "250:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:45",
                "type": ""
              }
            ],
            "src": "14:257:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:311:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "418:6:45"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "426:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:45",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "444:36:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "470:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "457:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:23:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "448:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "514:5:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "489:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "489:31:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "489:31:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "529:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "539:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "529:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "553:47:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "585:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "596:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "581:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "581:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "568:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:32:45"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "557:7:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "634:7:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "609:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "609:33:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "609:33:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "651:17:45",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "661:7:45"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "651:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "321:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "332:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "344:6:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "352:6:45",
                "type": ""
              }
            ],
            "src": "276:398:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "815:487:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "862:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "871:6:45"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "879:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "864:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "864:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "864:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "836:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "845:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "832:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "857:3:45",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "828:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "828:33:45"
                  },
                  "nodeType": "YulIf",
                  "src": "825:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "897:36:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "923:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "910:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:23:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "901:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "967:5:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "942:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "942:31:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "942:31:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "982:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "992:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "982:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1006:47:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1038:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1049:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1034:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1034:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1021:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:32:45"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1010:7:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1087:7:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1062:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1062:33:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1062:33:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1104:17:45",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1114:7:45"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1104:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1130:47:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1162:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1173:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1158:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1158:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1145:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1145:32:45"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "1134:7:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1211:7:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1186:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1186:33:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1186:33:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1228:17:45",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1238:7:45"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1228:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1254:42:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1281:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1292:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1277:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1277:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1264:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:32:45"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1254:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_contract$_IERC20_$8706t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "757:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "768:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "780:6:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "788:6:45",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "796:6:45",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "804:6:45",
                "type": ""
              }
            ],
            "src": "679:623:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1430:721:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1476:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1485:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1493:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1478:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1478:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1478:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1451:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1460:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1447:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1447:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1472:2:45",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "1440:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1511:36:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1537:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1524:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:23:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1515:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1581:5:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1556:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:31:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1556:31:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1596:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1606:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1596:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1620:42:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1647:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1658:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1643:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1643:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1630:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1630:32:45"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1620:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1671:46:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1702:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1713:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1698:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1685:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1685:32:45"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1675:6:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1726:28:45",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1736:18:45",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1730:2:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1781:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1790:6:45"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1798:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1783:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1783:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1783:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1769:6:45"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1777:2:45"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1766:2:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1766:14:45"
                  },
                  "nodeType": "YulIf",
                  "src": "1763:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1816:32:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1830:9:45"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1841:6:45"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1826:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:22:45"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1820:2:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1896:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1905:6:45"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1913:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1898:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1898:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1898:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1875:2:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1879:4:45",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1871:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1871:13:45"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1886:7:45"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1867:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1867:27:45"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1860:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1860:35:45"
                  },
                  "nodeType": "YulIf",
                  "src": "1857:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1931:30:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1958:2:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1945:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1945:16:45"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1935:6:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1988:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1997:6:45"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2005:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1990:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1990:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1990:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1976:6:45"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1984:2:45"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1973:2:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1973:14:45"
                  },
                  "nodeType": "YulIf",
                  "src": "1970:2:45"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2064:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2073:6:45"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2081:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2066:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2066:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2066:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2037:2:45"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2041:6:45"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2033:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2033:15:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2050:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2029:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2029:24:45"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2055:7:45"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2026:2:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2026:37:45"
                  },
                  "nodeType": "YulIf",
                  "src": "2023:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2099:21:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2113:2:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2117:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2109:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2109:11:45"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2099:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2129:16:45",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "2139:6:45"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2129:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1372:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1383:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1395:6:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1403:6:45",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1411:6:45",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1419:6:45",
                "type": ""
              }
            ],
            "src": "1307:844:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2234:219:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2280:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2289:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2297:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2282:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2282:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2282:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2255:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2264:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2251:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2251:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2276:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2247:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2247:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "2244:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2315:29:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2334:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2328:5:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2328:16:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2319:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2397:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2406:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2414:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2399:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2399:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2399:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2366:5:45"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2387:5:45"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2380:6:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2380:13:45"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2373:6:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2373:21:45"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2363:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2363:32:45"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2356:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2356:40:45"
                  },
                  "nodeType": "YulIf",
                  "src": "2353:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2432:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2442:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2432:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2200:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2211:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2223:6:45",
                "type": ""
              }
            ],
            "src": "2156:297:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2528:120:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2574:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2583:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2591:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2576:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2576:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2576:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2549:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2558:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2545:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2545:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2570:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2541:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2541:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "2538:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2609:33:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2632:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2619:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2619:23:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2609:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2494:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2505:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2517:6:45",
                "type": ""
              }
            ],
            "src": "2458:190:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2740:238:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2786:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2795:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2803:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2788:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2788:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2788:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2761:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2770:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2757:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2757:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2782:2:45",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2753:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2753:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "2750:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2821:33:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2844:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2831:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2831:23:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2821:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2863:45:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2893:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2904:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2889:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2889:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2876:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2876:32:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2867:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2942:5:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2917:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2917:31:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2917:31:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2957:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2967:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2957:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2698:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2709:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2721:6:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2729:6:45",
                "type": ""
              }
            ],
            "src": "2653:325:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3052:237:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3098:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3107:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3115:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3100:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3100:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3100:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3073:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3082:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3069:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3069:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3094:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3065:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3065:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "3062:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3133:36:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3159:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3146:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3146:23:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3137:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3233:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3242:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3250:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3235:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3235:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3235:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3191:5:45"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3202:5:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3213:3:45",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3218:10:45",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3209:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3209:20:45"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3198:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3198:32:45"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3188:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3188:43:45"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3181:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3181:51:45"
                  },
                  "nodeType": "YulIf",
                  "src": "3178:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3268:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3278:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3268:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3018:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3029:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3041:6:45",
                "type": ""
              }
            ],
            "src": "2983:306:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3379:187:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3425:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3434:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3442:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3427:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3427:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3427:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3400:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3409:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3396:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3396:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3421:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3392:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "3389:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3460:36:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3486:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3473:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3473:23:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3464:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3530:5:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3505:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3505:31:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3505:31:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3545:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3555:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3545:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$8706",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3345:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3356:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3368:6:45",
                "type": ""
              }
            ],
            "src": "3294:272:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3673:311:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3719:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3728:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3736:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3721:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3721:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3721:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3694:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3703:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3690:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3690:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3715:2:45",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3686:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3686:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "3683:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3754:36:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3780:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3767:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3767:23:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3758:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3824:5:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3799:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3799:31:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3799:31:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3839:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3849:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3839:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3863:47:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3895:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3906:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3891:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3891:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3878:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3878:32:45"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3867:7:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3944:7:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3919:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3919:33:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3919:33:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3961:17:45",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3971:7:45"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3961:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$8706t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3631:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3642:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3654:6:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3662:6:45",
                "type": ""
              }
            ],
            "src": "3571:413:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4108:362:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4154:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4163:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4171:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4156:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4156:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4156:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4129:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4138:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4125:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4125:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4150:2:45",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4121:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4121:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "4118:2:45"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4189:36:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4215:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4202:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4202:23:45"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4193:5:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4259:5:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4234:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4234:31:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4234:31:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4274:15:45",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4284:5:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4274:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4298:47:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4330:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4341:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4326:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4326:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4313:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4313:32:45"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4302:7:45",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4379:7:45"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4354:24:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4354:33:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4354:33:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4396:17:45",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4406:7:45"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4396:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4422:42:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4449:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4460:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4445:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4445:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4432:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4432:32:45"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4422:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$8706t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4058:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4069:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4081:6:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4089:6:45",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4097:6:45",
                "type": ""
              }
            ],
            "src": "3989:481:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4545:120:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4591:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4600:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4608:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4593:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4593:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4593:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4566:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4575:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4562:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4562:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4587:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4558:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4558:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "4555:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4626:33:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4649:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4636:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4636:23:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4626:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4511:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4522:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4534:6:45",
                "type": ""
              }
            ],
            "src": "4475:190:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4751:113:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4797:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4806:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4814:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4799:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4799:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4799:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4772:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4781:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4768:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4768:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4793:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4764:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "4761:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4832:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4848:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4842:5:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4842:16:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4832:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4717:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4728:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4740:6:45",
                "type": ""
              }
            ],
            "src": "4670:194:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4956:171:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5002:26:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5011:6:45"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5019:6:45"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5004:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5004:22:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5004:22:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4977:7:45"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4986:9:45"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4973:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4973:23:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4998:2:45",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4969:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4969:32:45"
                  },
                  "nodeType": "YulIf",
                  "src": "4966:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5037:33:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5060:9:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5047:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5047:23:45"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5037:6:45"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5079:42:45",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5106:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5117:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5102:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5102:18:45"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5089:12:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5089:32:45"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5079:6:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4914:9:45",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4925:7:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4937:6:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4945:6:45",
                "type": ""
              }
            ],
            "src": "4869:258:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5233:102:45",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5243:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5255:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5266:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5251:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5251:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5243:4:45"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5285:9:45"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5300:6:45"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5316:3:45",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5321:1:45",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5312:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5312:11:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5325:1:45",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5308:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5308:19:45"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5296:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5296:32:45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5278:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5278:51:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5278:51:45"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5202:9:45",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5213:6:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5224:4:45",
                "type": ""
              }
            ],
            "src": "5132:203:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5469:145:45",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5479:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5491:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5502:2:45",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5487:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5487:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5479:4:45"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5521:9:45"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5536:6:45"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5552:3:45",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5557:1:45",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5548:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5548:11:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5561:1:45",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5544:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5544:19:45"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5532:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5532:32:45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5514:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5514:51:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5514:51:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5585:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5596:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5581:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5581:18:45"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5601:6:45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5574:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5574:34:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5574:34:45"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5430:9:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5441:6:45",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5449:6:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5460:4:45",
                "type": ""
              }
            ],
            "src": "5340:274:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5714:92:45",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5724:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5736:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5747:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5732:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5732:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5724:4:45"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5766:9:45"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5791:6:45"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5784:6:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5784:14:45"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5777:6:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5777:22:45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5759:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5759:41:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5759:41:45"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5683:9:45",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5694:6:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5705:4:45",
                "type": ""
              }
            ],
            "src": "5619:187:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5912:76:45",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5922:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5934:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5945:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5930:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5930:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5922:4:45"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5964:9:45"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5975:6:45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5957:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5957:25:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5957:25:45"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5881:9:45",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5892:6:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5903:4:45",
                "type": ""
              }
            ],
            "src": "5811:177:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6109:102:45",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6119:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6131:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6142:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6127:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6127:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6119:4:45"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6161:9:45"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6176:6:45"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6192:3:45",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6197:1:45",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6188:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6188:11:45"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6201:1:45",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6184:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6184:19:45"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6172:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6172:32:45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6154:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6154:51:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6154:51:45"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$8706__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6078:9:45",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6089:6:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6100:4:45",
                "type": ""
              }
            ],
            "src": "5993:218:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6390:237:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6407:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6418:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6400:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6400:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6400:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6441:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6452:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6437:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6437:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6457:2:45",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6430:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6430:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6430:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6480:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6491:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6476:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6476:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6496:34:45",
                        "type": "",
                        "value": "AccessControl: sender must be an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6469:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6469:62:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6469:62:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6551:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6562:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6547:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6547:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6567:17:45",
                        "type": "",
                        "value": " admin to grant"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6540:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6540:45:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6540:45:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6594:27:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6606:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6617:3:45",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6602:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6602:19:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6594:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6367:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6381:4:45",
                "type": ""
              }
            ],
            "src": "6216:411:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6806:180:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6823:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6834:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6816:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6816:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6816:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6857:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6868:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6853:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6853:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6873:2:45",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6846:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6846:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6846:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6896:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6907:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6892:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6892:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6912:32:45",
                        "type": "",
                        "value": "withdrawFunds: transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6885:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6885:60:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6885:60:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6954:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6966:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6977:2:45",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6962:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6962:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6954:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35ce24506701472e8e320e640e8d3586694f1a617f797058c8b082962cf89ccd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6783:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6797:4:45",
                "type": ""
              }
            ],
            "src": "6632:354:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7165:182:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7182:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7193:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7175:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7175:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7175:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7216:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7227:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7212:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7212:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7232:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7205:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7205:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7205:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7255:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7266:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7251:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7251:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7271:34:45",
                        "type": "",
                        "value": "transfer doesn't accept calldata"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7244:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7244:62:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7244:62:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7315:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7327:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7338:2:45",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7323:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7323:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7315:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_596684b4337a52c93ade0b2c259d39d006a0e559ec087cf0bdb790469756bb53__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7142:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7156:4:45",
                "type": ""
              }
            ],
            "src": "6991:356:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7526:238:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7543:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7554:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7536:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7536:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7536:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7577:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7588:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7573:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7573:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7593:2:45",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7566:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7566:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7566:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7616:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7627:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7612:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7612:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7632:34:45",
                        "type": "",
                        "value": "AccessControl: sender must be an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7605:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7605:62:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7605:62:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7687:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7698:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7683:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7683:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7703:18:45",
                        "type": "",
                        "value": " admin to revoke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7676:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7676:46:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7676:46:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7731:27:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7743:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7754:3:45",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7739:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7739:19:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7731:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7503:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7517:4:45",
                "type": ""
              }
            ],
            "src": "7352:412:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7943:169:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7960:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7971:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7953:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7953:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7953:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7994:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8005:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7990:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7990:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8010:2:45",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7983:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7983:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7983:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8033:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8044:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8029:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8029:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8049:21:45",
                        "type": "",
                        "value": "onlyAdmin: bad role"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8022:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8022:49:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8022:49:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8080:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8092:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8103:2:45",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8088:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8088:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8080:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b99e8be6064385eaa0c6dc9e749154ba3d243e50c59a38429cf5cb0e423018a1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7920:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7934:4:45",
                "type": ""
              }
            ],
            "src": "7769:343:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8291:238:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8308:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8319:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8301:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8301:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8301:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8342:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8353:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8338:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8338:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8358:2:45",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8331:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8331:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8331:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8381:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8392:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8377:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8377:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8397:34:45",
                        "type": "",
                        "value": "withdrawPayment: insufficient wi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8370:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8370:62:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8370:62:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8452:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8463:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8448:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8448:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8468:18:45",
                        "type": "",
                        "value": "thdrawable funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8441:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8441:46:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8441:46:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8496:27:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8508:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8519:3:45",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8504:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8504:19:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8496:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c63d3898c0fb346e9acadcbc2ed41370cee415a408e3bca97d2d59bb870a2e4e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8268:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8282:4:45",
                "type": ""
              }
            ],
            "src": "8117:412:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8708:229:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8725:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8736:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8718:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8718:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8718:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8759:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8770:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8755:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8755:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8775:2:45",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8748:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8748:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8748:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8798:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8809:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8794:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8794:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8814:34:45",
                        "type": "",
                        "value": "withdrawPayment: only callable b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8787:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8787:62:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8787:62:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8869:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8880:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8865:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8865:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8885:9:45",
                        "type": "",
                        "value": "y admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8858:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8858:37:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8858:37:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8904:27:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8916:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8927:3:45",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8912:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8912:19:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8904:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e6ab32788b176d62ef2f29923206037886ff9b79473980f952883ee1a6a7f638__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8685:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8699:4:45",
                "type": ""
              }
            ],
            "src": "8534:403:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9116:231:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9133:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9144:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9126:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9126:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9126:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9167:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9178:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9163:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9163:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9183:2:45",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9156:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9156:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9156:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9206:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9217:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9202:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9202:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9222:34:45",
                        "type": "",
                        "value": "withdrawFunds: insufficient rese"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9195:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9195:62:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9195:62:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9277:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9288:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9273:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9273:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9293:11:45",
                        "type": "",
                        "value": "rve funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9266:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9266:39:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9266:39:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9314:27:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9326:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9337:3:45",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9322:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9322:19:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9314:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e785bf7004f34962d4d02bef29674c37c057eb73146ebc5be3fe661469920fbd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9093:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9107:4:45",
                "type": ""
              }
            ],
            "src": "8942:405:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9526:231:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9543:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9554:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9536:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9536:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9536:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9577:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9588:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9573:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9573:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9593:2:45",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9566:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9566:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9566:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9616:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9627:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9612:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9612:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9632:34:45",
                        "type": "",
                        "value": "updateOracleAdmin: only callable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9605:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9605:62:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9605:62:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9687:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9698:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9683:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9683:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9703:11:45",
                        "type": "",
                        "value": " by admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9676:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9676:39:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9676:39:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9724:27:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9736:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9747:3:45",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9732:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9732:19:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9724:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eae5d03529efd772b3498b768bfc7114a7437bc7242fe78939423709eb30fd18__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9503:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9517:4:45",
                "type": ""
              }
            ],
            "src": "9352:405:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9936:237:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9953:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9964:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9946:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9946:21:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9946:21:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9987:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9998:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9983:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9983:18:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10003:2:45",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9976:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9976:30:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9976:30:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10026:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10037:2:45",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10022:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10022:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10042:34:45",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10015:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10015:62:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10015:62:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10097:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10108:2:45",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10093:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10093:18:45"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10113:17:45",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10086:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10086:45:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10086:45:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10140:27:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10152:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10163:3:45",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10148:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10148:19:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10140:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9913:9:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9927:4:45",
                "type": ""
              }
            ],
            "src": "9762:411:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10279:76:45",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10289:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10301:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10312:2:45",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10297:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10297:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10289:4:45"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10331:9:45"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10342:6:45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10324:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10324:25:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10324:25:45"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10248:9:45",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10259:6:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10270:4:45",
                "type": ""
              }
            ],
            "src": "10178:177:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10489:119:45",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10499:26:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10511:9:45"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10522:2:45",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10507:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10507:18:45"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10499:4:45"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10541:9:45"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10552:6:45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10534:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10534:25:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10534:25:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10579:9:45"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10590:2:45",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10575:3:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10575:18:45"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10595:6:45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10568:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10568:34:45"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10568:34:45"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10450:9:45",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10461:6:45",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10469:6:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10480:4:45",
                "type": ""
              }
            ],
            "src": "10360:248:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10662:179:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10692:117:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "10713:4:45"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10723:3:45",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10728:10:45",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10719:3:45"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10719:20:45"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10706:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10706:34:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10706:34:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10760:1:45",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10763:4:45",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10753:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10753:15:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10753:15:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "10788:4:45"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10794:4:45",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10781:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10781:18:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10781:18:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10678:1:45"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10681:1:45"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10675:2:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10675:8:45"
                  },
                  "nodeType": "YulIf",
                  "src": "10672:2:45"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10818:17:45",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10830:1:45"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10833:1:45"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10826:3:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10826:9:45"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10818:4:45"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10644:1:45",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10647:1:45",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10653:4:45",
                "type": ""
              }
            ],
            "src": "10613:228:45"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10891:86:45",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10955:16:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10964:1:45",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10967:1:45",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10957:6:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10957:12:45"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10957:12:45"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10914:5:45"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10925:5:45"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10940:3:45",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10945:1:45",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10936:3:45"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10936:11:45"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10949:1:45",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "10932:3:45"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10932:19:45"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10921:3:45"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10921:31:45"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10911:2:45"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10911:42:45"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10904:6:45"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10904:50:45"
                  },
                  "nodeType": "YulIf",
                  "src": "10901:2:45"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10880:5:45",
                "type": ""
              }
            ],
            "src": "10846:131:45"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_contract$_IERC20_$8706t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value2, value2) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value2, value2) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value2, value2) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$8706(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$8706t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$8706t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$8706__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: sender must be an\")\n        mstore(add(headStart, 96), \" admin to grant\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_35ce24506701472e8e320e640e8d3586694f1a617f797058c8b082962cf89ccd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"withdrawFunds: transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_596684b4337a52c93ade0b2c259d39d006a0e559ec087cf0bdb790469756bb53__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"transfer doesn't accept calldata\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"AccessControl: sender must be an\")\n        mstore(add(headStart, 96), \" admin to revoke\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b99e8be6064385eaa0c6dc9e749154ba3d243e50c59a38429cf5cb0e423018a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"onlyAdmin: bad role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c63d3898c0fb346e9acadcbc2ed41370cee415a408e3bca97d2d59bb870a2e4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"withdrawPayment: insufficient wi\")\n        mstore(add(headStart, 96), \"thdrawable funds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e6ab32788b176d62ef2f29923206037886ff9b79473980f952883ee1a6a7f638__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"withdrawPayment: only callable b\")\n        mstore(add(headStart, 96), \"y admin\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e785bf7004f34962d4d02bef29674c37c057eb73146ebc5be3fe661469920fbd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"withdrawFunds: insufficient rese\")\n        mstore(add(headStart, 96), \"rve funds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_eae5d03529efd772b3498b768bfc7114a7437bc7242fe78939423709eb30fd18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"updateOracleAdmin: only callable\")\n        mstore(add(headStart, 96), \" by admin\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(diff, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(diff, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 45,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "174:6549:0:-:0;;;1948:459;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2127:16;:36;;;2173:9;:22;;-1:-1:-1;;;;;2173:22:0;;;-1:-1:-1;;;;;;2173:22:0;;;;;;;2205:10;:24;;;;;;;;;;;;;;;2173:22;2239:26;;;-1:-1:-1;2275:28:0;;;2313:42;2173:9;2344:10;2313;:42::i;:::-;2365:35;793:24;2389:10;2365;:35::i;:::-;1948:459;;;;;174:6549;;6519:110:35;6597:25;6608:4;6614:7;6597:10;:25::i;:::-;6519:110;;:::o;6952:224::-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:35;;;;;;;;;;;;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:35;;;;;;;;;:36;;-1:-1:-1;;7064:36:35;7096:4;7064:36;;;7146:12;665:10:42;586:96;;7146:12:35;-1:-1:-1;;;;;7119:40:35;7137:7;-1:-1:-1;;;;;7119:40:35;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;14:185:45:-;101:13;;-1:-1:-1;;;;;143:31:45;;133:42;;123:2;;189:1;186;179:12;123:2;82:117;;;:::o;204:534::-;;;;;;425:3;413:9;404:7;400:23;396:33;393:2;;;447:6;439;432:22;393:2;481:9;475:16;465:26;;531:2;520:9;516:18;510:25;500:35;;575:2;564:9;560:18;554:25;544:35;;598:57;651:2;640:9;636:18;598:57;:::i;:::-;588:67;;674:58;727:3;716:9;712:19;674:58;:::i;:::-;664:68;;383:355;;;;;;;;:::o;:::-;174:6549:0;;;;;;",
  "deployedSourceMap": "174:6549:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3566:214:35;;;;;;:::i;:::-;;:::i;:::-;;;5784:14:45;;5777:22;5759:41;;5747:2;5732:18;3566:214:35;;;;;;;;755:62:0;;793:24;755:62;;;;;5957:25:45;;;5945:2;5930:18;755:62:0;5912:76:45;858:26:0;;;;;;1059:23;;;;;-1:-1:-1;;;;;1059:23:0;;;;;;-1:-1:-1;;;;;5296:32:45;;;5278:51;;5266:2;5251:18;1059:23:0;5233:102:45;1258:52:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;10534:25:45;;;10590:2;10575:18;;10568:34;;;;10507:18;1258:52:0;10489:119:45;4398:449:0;;;;;;:::i;:::-;;:::i;:::-;;4185:121:35;;;;;;:::i;:::-;4251:7;4277:12;;;;;;;;;;:22;;;;4185:121;4556:228;;;;;;:::i;:::-;;:::i;5211:185:0:-;;;;;;:::i;:::-;;:::i;5740:214:35:-;;;;;;:::i;:::-;;:::i;1112:24:0:-;;;;;-1:-1:-1;;;;;1112:24:0;;;2577:663;;;;;;:::i;:::-;;:::i;3738:204::-;;;;;;:::i;:::-;;:::i;3867:137:35:-;;;;;;:::i;:::-;;:::i;2363:49::-;;2408:4;2363:49;;6541:180:0;;;;;;:::i;:::-;-1:-1:-1;;;;;6675:22:0;;;6645:7;6675:22;;;:13;:22;;;;;;;;:39;;;;;:31;;;;:39;;;;6541:180;;;;;4015:233;;;;;;:::i;:::-;;:::i;1165:51::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1165:51:0;;;920:27;;;;;;4955:126;;;;;;:::i;:::-;;:::i;5018:231:35:-;;;;;;:::i;:::-;;:::i;3381:293:0:-;;;;;;:::i;:::-;;:::i;988:31::-;;;;;;5507:166;;;;;;:::i;:::-;;:::i;5746:107::-;;;;;;:::i;:::-;;:::i;3566:214:35:-;3651:4;-1:-1:-1;;;;;;3674:47:35;;-1:-1:-1;;;3674:47:35;;:99;;-1:-1:-1;;;;;;;;;;871:40:43;;;3737:36:35;3667:106;3566:214;-1:-1:-1;;3566:214:35:o;4398:449:0:-;1388:39;2408:4:35;1416:10:0;1388:7;:39::i;:::-;1380:71;;;;-1:-1:-1;;;1380:71:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;4563:22:0;::::1;;::::0;;;:14:::1;:22;::::0;;;;:37:::1;;::::0;4555:57;-1:-1:-1;4555:57:0::1;4534:145;;;::::0;-1:-1:-1;;;4534:145:0;;9144:2:45;4534:145:0::1;::::0;::::1;9126:21:45::0;9183:2;9163:18;;;9156:30;9222:34;9202:18;;;9195:62;-1:-1:-1;;;9273:18:45;;;9266:39;9322:19;;4534:145:0::1;9116:231:45::0;4534:145:0::1;4710:36;::::0;-1:-1:-1;;;4710:36:0;;-1:-1:-1;;;;;5532:32:45;;;4710:36:0::1;::::0;::::1;5514:51:45::0;5581:18;;;5574:34;;;4710:15:0;::::1;::::0;::::1;::::0;5487:18:45;;4710:36:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4689:113;;;::::0;-1:-1:-1;;;4689:113:0;;6834:2:45;4689:113:0::1;::::0;::::1;6816:21:45::0;6873:2;6853:18;;;6846:30;6912:32;6892:18;;;6885:60;6962:18;;4689:113:0::1;6806:180:45::0;4689:113:0::1;4812:28;4833:6;4812:20;:28::i;:::-;4398:449:::0;;;:::o;4556:228:35:-;4251:7;4277:12;;;;;;;;;;:22;;;4648:41;;4656:18;665:10:42;4676:12:35;586:96:42;4648:41:35;4640:101;;;;-1:-1:-1;;;4640:101:35;;6418:2:45;4640:101:35;;;6400:21:45;6457:2;6437:18;;;6430:30;6496:34;6476:18;;;6469:62;-1:-1:-1;;;6547:18:45;;;6540:45;6602:19;;4640:101:35;6390:237:45;4640:101:35;4752:25;4763:4;4769:7;4752:10;:25::i;:::-;4556:228;;:::o;5211:185:0:-;1388:39;2408:4:35;1416:10:0;1388:7;:39::i;:::-;1380:71;;;;-1:-1:-1;;;1380:71:0;;;;;;;:::i;:::-;5325:11:::1;:26:::0;;;;5361:12:::1;:28:::0;5211:185::o;5740:214:35:-;-1:-1:-1;;;;;5835:23:35;;665:10:42;5835:23:35;5827:83;;;;-1:-1:-1;;;5827:83:35;;9964:2:45;5827:83:35;;;9946:21:45;10003:2;9983:18;;;9976:30;10042:34;10022:18;;;10015:62;-1:-1:-1;;;10093:18:45;;;10086:45;10148:19;;5827:83:35;9936:237:45;5827:83:35;5921:26;5933:4;5939:7;5921:11;:26::i;2577:663:0:-;-1:-1:-1;;;;;2749:22:0;;;;;;;:13;:22;;;;;:28;;2781:10;2749:42;2728:128;;;;-1:-1:-1;;;2728:128:0;;8736:2:45;2728:128:0;;;8718:21:45;8775:2;8755:18;;;8748:30;8814:34;8794:18;;;8787:62;-1:-1:-1;;;8865:18:45;;;8858:37;8912:19;;2728:128:0;8708:229:45;2728:128:0;-1:-1:-1;;;;;2886:22:0;;;2866:17;2886:22;;;:13;:22;;;;;;;;:39;;;;;:31;;;;:39;;;;2956:20;;;;2935:115;;;;-1:-1:-1;;;2935:115:0;;8319:2:45;2935:115:0;;;8301:21:45;8358:2;8338:18;;;8331:30;8397:34;8377:18;;;8370:62;-1:-1:-1;;;8448:18:45;;;8441:46;8504:19;;2935:115:0;8291:238:45;2935:115:0;3102:19;3114:7;3102:9;:19;:::i;:::-;-1:-1:-1;;;;;3060:22:0;;;;;;;:13;:22;;;;;;;;:39;;;;;:31;;;;:39;;;;;:61;;;;3131:14;:22;;;;;:48;;3172:7;;3060:22;3131:48;;3172:7;;3131:48;:::i;:::-;;;;-1:-1:-1;;3196:36:0;;-1:-1:-1;;;3196:36:0;;-1:-1:-1;;;;;5532:32:45;;;3196:36:0;;;5514:51:45;5581:18;;;5574:34;;;3196:15:0;;;;;5487:18:45;;3196:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3189:44;;-1:-1:-1;;;3189:44:0;;;;;;;;;2577:663;;;;;:::o;3738:204::-;-1:-1:-1;;;;;3898:22:0;;;;;;:14;:22;;;;;;;:37;3852:31;;-1:-1:-1;;;3852:31:0;;3877:4;3852:31;;;5278:51:45;3898:37:0;;:22;3852:16;;5251:18:45;;3852:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:83;;;;:::i;:::-;-1:-1:-1;;;;;3800:22:0;;;;;;;:14;:22;;;;;:37;;:135;3738:204::o;3867:137:35:-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:35;;;;;;;;;;;;;;;3867:137::o;4015:233:0:-;4137:17;;4129:62;;;;-1:-1:-1;;;4129:62:0;;7193:2:45;4129:62:0;;;7175:21:45;;;7212:18;;;7205:30;7271:34;7251:18;;;7244:62;7323:18;;4129:62:0;7165:182:45;4129:62:0;4201:40;4229:10;4201:20;:40::i;:::-;4015:233;;;;:::o;4955:126::-;1388:39;2408:4:35;1416:10:0;1388:7;:39::i;:::-;1380:71;;;;-1:-1:-1;;;1380:71:0;;;;;;;:::i;:::-;5038:16:::1;:36:::0;4955:126::o;5018:231:35:-;4251:7;4277:12;;;;;;;;;;:22;;;5111:41;;5119:18;4185:121;5111:41;5103:102;;;;-1:-1:-1;;;5103:102:35;;7554:2:45;5103:102:35;;;7536:21:45;7593:2;7573:18;;;7566:30;7632:34;7612:18;;;7605:62;-1:-1:-1;;;7683:18:45;;;7676:46;7739:19;;5103:102:35;7526:238:45;3381:293:0;-1:-1:-1;;;;;3502:22:0;;;;;;;:13;:22;;;;;:28;;3534:10;3502:42;3481:130;;;;-1:-1:-1;;;3481:130:0;;9554:2:45;3481:130:0;;;9536:21:45;9593:2;9573:18;;;9566:30;9632:34;9612:18;;;9605:62;-1:-1:-1;;;9683:18:45;;;9676:39;9732:19;;3481:130:0;9526:231:45;3481:130:0;-1:-1:-1;;;;;3621:22:0;;;;;;;:13;:22;;;;;:46;;-1:-1:-1;;;;;;3621:46:0;;;;;;;;3381:293::o;5507:166::-;1388:39;2408:4:35;1416:10:0;1388:7;:39::i;:::-;1380:71;;;;-1:-1:-1;;;1380:71:0;;;;;;;:::i;:::-;5588:31:::1;793:24;5611:7;5588:9;:31::i;5746:107::-:0;1388:39;2408:4:35;1416:10:0;1388:7;:39::i;:::-;1380:71;;;;-1:-1:-1;;;1380:71:0;;;;;;;:::i;:::-;5814:32:::1;793:24;5838:7;5814:10;:32::i;:::-;5746:107:::0;:::o;6952:224:35:-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:35;;;;;;;;;:36;;-1:-1:-1;;7064:36:35;7096:4;7064:36;;;7146:12;665:10:42;586:96;;7146:12:35;-1:-1:-1;;;;;7119:40:35;7137:7;-1:-1:-1;;;;;7119:40:35;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;7182:225::-;7256:22;7264:4;7270:7;7256;:22::i;:::-;7252:149;;;7326:5;7294:12;;;;;;;;;;;-1:-1:-1;;;;;7294:29:35;;;;;;;;;;:37;;-1:-1:-1;;7294:37:35;;;7350:40;665:10:42;;7294:12:35;;7350:40;;7326:5;7350:40;7182:225;;:::o;14:257:45:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:45:o;276:398::-;;;405:2;393:9;384:7;380:23;376:32;373:2;;;426:6;418;411:22;373:2;470:9;457:23;489:31;514:5;489:31;:::i;:::-;539:5;-1:-1:-1;596:2:45;581:18;;568:32;609:33;568:32;609:33;:::i;:::-;661:7;651:17;;;363:311;;;;;:::o;679:623::-;;;;;857:3;845:9;836:7;832:23;828:33;825:2;;;879:6;871;864:22;825:2;923:9;910:23;942:31;967:5;942:31;:::i;:::-;992:5;-1:-1:-1;1049:2:45;1034:18;;1021:32;1062:33;1021:32;1062:33;:::i;:::-;1114:7;-1:-1:-1;1173:2:45;1158:18;;1145:32;1186:33;1145:32;1186:33;:::i;:::-;815:487;;;;-1:-1:-1;1238:7:45;;1292:2;1277:18;1264:32;;-1:-1:-1;;815:487:45:o;1307:844::-;;;;;1472:2;1460:9;1451:7;1447:23;1443:32;1440:2;;;1493:6;1485;1478:22;1440:2;1537:9;1524:23;1556:31;1581:5;1556:31;:::i;:::-;1606:5;-1:-1:-1;1658:2:45;1643:18;;1630:32;;-1:-1:-1;1713:2:45;1698:18;;1685:32;1736:18;1766:14;;;1763:2;;;1798:6;1790;1783:22;1763:2;1841:6;1830:9;1826:22;1816:32;;1886:7;1879:4;1875:2;1871:13;1867:27;1857:2;;1913:6;1905;1898:22;1857:2;1958;1945:16;1984:2;1976:6;1973:14;1970:2;;;2005:6;1997;1990:22;1970:2;2055:7;2050:2;2041:6;2037:2;2033:15;2029:24;2026:37;2023:2;;;2081:6;2073;2066:22;2023:2;1430:721;;;;-1:-1:-1;;2117:2:45;2109:11;;-1:-1:-1;;;1430:721:45:o;2156:297::-;;2276:2;2264:9;2255:7;2251:23;2247:32;2244:2;;;2297:6;2289;2282:22;2244:2;2334:9;2328:16;2387:5;2380:13;2373:21;2366:5;2363:32;2353:2;;2414:6;2406;2399:22;2458:190;;2570:2;2558:9;2549:7;2545:23;2541:32;2538:2;;;2591:6;2583;2576:22;2538:2;-1:-1:-1;2619:23:45;;2528:120;-1:-1:-1;2528:120:45:o;2653:325::-;;;2782:2;2770:9;2761:7;2757:23;2753:32;2750:2;;;2803:6;2795;2788:22;2750:2;2844:9;2831:23;2821:33;;2904:2;2893:9;2889:18;2876:32;2917:31;2942:5;2917:31;:::i;2983:306::-;;3094:2;3082:9;3073:7;3069:23;3065:32;3062:2;;;3115:6;3107;3100:22;3062:2;3146:23;;-1:-1:-1;;;;;;3198:32:45;;3188:43;;3178:2;;3250:6;3242;3235:22;3571:413;;;3715:2;3703:9;3694:7;3690:23;3686:32;3683:2;;;3736:6;3728;3721:22;3989:481;;;;4150:2;4138:9;4129:7;4125:23;4121:32;4118:2;;;4171:6;4163;4156:22;4118:2;4215:9;4202:23;4234:31;4259:5;4234:31;:::i;:::-;4284:5;-1:-1:-1;4341:2:45;4326:18;;4313:32;4354:33;4313:32;4354:33;:::i;:::-;4108:362;;4406:7;;-1:-1:-1;;;4460:2:45;4445:18;;;;4432:32;;4108:362::o;4670:194::-;;4793:2;4781:9;4772:7;4768:23;4764:32;4761:2;;;4814:6;4806;4799:22;4761:2;-1:-1:-1;4842:16:45;;4751:113;-1:-1:-1;4751:113:45:o;4869:258::-;;;4998:2;4986:9;4977:7;4973:23;4969:32;4966:2;;;5019:6;5011;5004:22;4966:2;-1:-1:-1;;5047:23:45;;;5117:2;5102:18;;;5089:32;;-1:-1:-1;4956:171:45:o;7769:343::-;7971:2;7953:21;;;8010:2;7990:18;;;7983:30;-1:-1:-1;;;8044:2:45;8029:18;;8022:49;8103:2;8088:18;;7943:169::o;10613:228::-;;10681:1;10678;10675:8;10672:2;;;-1:-1:-1;;;10706:34:45;;10763:4;10760:1;10753:15;10794:4;10713;10781:18;10672:2;-1:-1:-1;10826:9:45;;10662:179::o;10846:131::-;-1:-1:-1;;;;;10921:31:45;;10911:42;;10901:2;;10967:1;10964;10957:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract Aggregator is AccessControl {\n    struct OracleInfo {\n        address admin; // current oracle admin\n        mapping(IERC20 => uint256) balances; // balances\n    }\n    struct BlockConfirmationsInfo {\n        uint256 count; // current oracle admin\n        bool requireExtraCheck; // current oracle admin\n        mapping(bytes32 => bool) isConfirmed; // submission => was confirmed\n    }\n    struct PaymentInfo {\n        uint256 allocatedFunds; // asset's amount payed to oracles\n        uint256 availableFunds; // asset's amount available to be payed to oracles\n    }\n\n    bytes32 public constant ORACLE_ROLE = keccak256(\"ORACLE_ROLE\"); // role allowed to submit the data\n    uint256 public corePayment; // payment for one submission\n    uint256 public bonusPayment; // bonus reward for one submission\n    uint256 public minConfirmations; // minimal required confirmations\n    IERC20 public coreToken; // LINK's token address\n    IERC20 public bonusToken; // DBR's token address\n    mapping(address => OracleInfo) public getOracleInfo; // oracle address => oracle details\n    mapping(IERC20 => PaymentInfo) public getPaymentInfo; // asset address => funds details\n\n    modifier onlyAdmin {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"onlyAdmin: bad role\");\n        _;\n    }\n    modifier onlyOracle {\n        require(hasRole(ORACLE_ROLE, msg.sender), \"onlyOracle: bad role\");\n        _;\n    }\n\n    /* PUBLIC */\n\n    /// @dev Constructor that initializes the most important configurations.\n    /// @param _minConfirmations Common confirmations count.\n    /// @param _corePayment Oracle reward.\n    /// @param _bonusPayment Oracle reward.\n    /// @param _coreToken Link token to pay to oracles.\n    /// @param _bonusToken DBR token to pay to oracles.\n    constructor(\n        uint256 _minConfirmations,\n        uint256 _corePayment,\n        uint256 _bonusPayment,\n        IERC20 _coreToken,\n        IERC20 _bonusToken\n    ) {\n        minConfirmations = _minConfirmations;\n        coreToken = _coreToken;\n        bonusToken = _bonusToken;\n        corePayment = _corePayment;\n        bonusPayment = _bonusPayment;\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(ORACLE_ROLE, msg.sender);\n    }\n\n    /// @dev Withdraws oracle reward.\n    /// @param _oracle Oracle address.\n    /// @param _recipient Recepient reward.\n    /// @param _amount Amount to withdraw.\n    function withdrawPayment(\n        address _oracle,\n        address _recipient,\n        IERC20 _asset,\n        uint256 _amount\n    ) external {\n        require(\n            getOracleInfo[_oracle].admin == msg.sender,\n            \"withdrawPayment: only callable by admin\"\n        );\n        uint256 available = getOracleInfo[_oracle].balances[_asset];\n        require(\n            available >= _amount,\n            \"withdrawPayment: insufficient withdrawable funds\"\n        );\n        getOracleInfo[_oracle].balances[_asset] = available - _amount;\n        getPaymentInfo[_asset].allocatedFunds -= _amount;\n        assert(_asset.transfer(_recipient, _amount));\n    }\n\n    /// @dev Updates oracle's admin address.\n    /// @param _oracle Oracle address.\n    /// @param _newOracleAdmin New oracle address.\n    function updateOracleAdmin(address _oracle, address _newOracleAdmin)\n        external\n    {\n        require(\n            getOracleInfo[_oracle].admin == msg.sender,\n            \"updateOracleAdmin: only callable by admin\"\n        );\n        getOracleInfo[_oracle].admin = _newOracleAdmin;\n    }\n\n    /// @dev Updates available rewards to be distributed.\n    function updateAvailableFunds(IERC20 _asset) public {\n        getPaymentInfo[_asset].availableFunds =\n            _asset.balanceOf(address(this)) -\n            getPaymentInfo[_asset].allocatedFunds;\n    }\n\n    /// @dev Updates link balance.\n    /// @param _data Call data.\n    function onTokenTransfer(\n        address,\n        uint256,\n        bytes calldata _data\n    ) external {\n        require(_data.length == 0, \"transfer doesn't accept calldata\");\n        updateAvailableFunds(IERC20(msg.sender));\n    }\n\n    /* ADMIN */\n\n    /// @dev Withdraws earned LINK's.\n    /// @param _recipient Reward's recepient.\n    /// @param _amount Amount to withdraw.\n    function withdrawFunds(\n        IERC20 _asset,\n        address _recipient,\n        uint256 _amount\n    ) external onlyAdmin() {\n        require(\n            uint256(getPaymentInfo[_asset].availableFunds) >= _amount,\n            \"withdrawFunds: insufficient reserve funds\"\n        );\n        require(\n            _asset.transfer(_recipient, _amount),\n            \"withdrawFunds: transfer failed\"\n        );\n        updateAvailableFunds(_asset);\n    }\n\n    /// @dev Sets minimal required confirmations.\n    /// @param _minConfirmations Confirmation info.\n    function setMinConfirmations(uint256 _minConfirmations) public onlyAdmin {\n        minConfirmations = _minConfirmations;\n    }\n\n    /// @dev Sets new oracle reward.\n    /// @param _corePayment Oracle reward.\n    /// @param _bonusPayment Oracle reward.\n    function setPayment(uint256 _corePayment, uint256 _bonusPayment)\n        external\n        onlyAdmin\n    {\n        corePayment = _corePayment;\n        bonusPayment = _bonusPayment;\n    }\n\n    /// @dev Add new oracle.\n    /// @param _oracle Oracle address.\n    /// @param _admin Admin address.\n    function addOracle(address _oracle, address _admin) external onlyAdmin {\n        grantRole(ORACLE_ROLE, _oracle);\n        getOracleInfo[_oracle].admin = _admin;\n    }\n\n    /// @dev Remove oracle.\n    /// @param _oracle Oracle address.\n    function removeOracle(address _oracle) external onlyAdmin {\n        revokeRole(ORACLE_ROLE, _oracle);\n    }\n\n    /* INTERNAL */\n\n    /// @dev Assess teh oracle rewards.\n    /// @param _oracle Oracle address.\n    function _payOracle(address _oracle) internal {\n        getPaymentInfo[coreToken].availableFunds -= corePayment;\n        getPaymentInfo[coreToken].allocatedFunds += corePayment;\n        getOracleInfo[_oracle].balances[coreToken] += corePayment;\n        getPaymentInfo[bonusToken].availableFunds -= bonusPayment;\n        getPaymentInfo[bonusToken].allocatedFunds += bonusPayment;\n        getOracleInfo[_oracle].balances[bonusToken] += bonusPayment;\n    }\n\n    /* VIEW */\n\n    /// @dev Return's oracle reward.\n    /// @param _oracle Oracle address.\n    /// @return Oracle rewards.\n    function getWithdrawable(IERC20 _asset, address _oracle)\n        external\n        view\n        returns (uint256)\n    {\n        return getOracleInfo[_oracle].balances[_asset];\n    }\n}\n",
  "sourcePath": "/root/debridge-contracts/contracts/chainlink/Aggregator.sol",
  "ast": {
    "absolutePath": "/root/debridge-contracts/contracts/chainlink/Aggregator.sol",
    "exportedSymbols": {
      "AccessControl": [
        7970
      ],
      "Aggregator": [
        458
      ],
      "Context": [
        9249
      ],
      "ERC165": [
        9273
      ],
      "IAccessControl": [
        7690
      ],
      "IERC165": [
        9285
      ],
      "IERC20": [
        8706
      ]
    },
    "id": 459,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 459,
        "sourceUnit": 7971,
        "src": "57:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 459,
        "sourceUnit": 8707,
        "src": "116:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7970,
              "src": "197:13:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "197:13:0"
          }
        ],
        "contractDependencies": [
          7690,
          7970,
          9249,
          9273,
          9285
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 458,
        "linearizedBaseContracts": [
          458,
          7970,
          9273,
          9285,
          7690,
          9249
        ],
        "name": "Aggregator",
        "nameLocation": "183:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Aggregator.OracleInfo",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "admin",
                "nameLocation": "253:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "245:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "balances",
                "nameLocation": "319:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "292:35:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                  "typeString": "mapping(contract IERC20 => uint256)"
                },
                "typeName": {
                  "id": 11,
                  "keyType": {
                    "id": 9,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "300:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "300:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "292:26:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                    "typeString": "mapping(contract IERC20 => uint256)"
                  },
                  "valueType": {
                    "id": 10,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OracleInfo",
            "nameLocation": "224:10:0",
            "nodeType": "StructDefinition",
            "scope": 458,
            "src": "217:129:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Aggregator.BlockConfirmationsInfo",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "count",
                "nameLocation": "399:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "391:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "391:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "requireExtraCheck",
                "nameLocation": "443:17:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "438:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 16,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "438:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "isConfirmed",
                "nameLocation": "519:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "494:36:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "typeName": {
                  "id": 20,
                  "keyType": {
                    "id": 18,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "494:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "valueType": {
                    "id": 19,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BlockConfirmationsInfo",
            "nameLocation": "358:22:0",
            "nodeType": "StructDefinition",
            "scope": 458,
            "src": "351:217:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Aggregator.PaymentInfo",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "allocatedFunds",
                "nameLocation": "610:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "602:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "availableFunds",
                "nameLocation": "677:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "669:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "669:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PaymentInfo",
            "nameLocation": "580:11:0",
            "nodeType": "StructDefinition",
            "scope": 458,
            "src": "573:176:0",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "07e2cea5",
            "id": 32,
            "mutability": "constant",
            "name": "ORACLE_ROLE",
            "nameLocation": "779:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "755:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 28,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "755:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f5241434c455f524f4c45",
                  "id": 30,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "803:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1",
                    "typeString": "literal_string \"ORACLE_ROLE\""
                  },
                  "value": "ORACLE_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1",
                    "typeString": "literal_string \"ORACLE_ROLE\""
                  }
                ],
                "id": 29,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "793:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "793:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08b8304b",
            "id": 34,
            "mutability": "mutable",
            "name": "corePayment",
            "nameLocation": "873:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "858:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "858:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cd283118",
            "id": 36,
            "mutability": "mutable",
            "name": "bonusPayment",
            "nameLocation": "935:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "920:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "920:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7c4393e",
            "id": 38,
            "mutability": "mutable",
            "name": "minConfirmations",
            "nameLocation": "1003:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "988:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "988:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c2b72e9",
            "id": 41,
            "mutability": "mutable",
            "name": "coreToken",
            "nameLocation": "1073:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "1059:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8706",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 40,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8706,
                "src": "1059:6:0"
              },
              "referencedDeclaration": 8706,
              "src": "1059:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8706",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "41d4a1ab",
            "id": 44,
            "mutability": "mutable",
            "name": "bonusToken",
            "nameLocation": "1126:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "1112:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8706",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 43,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8706,
                "src": "1112:6:0"
              },
              "referencedDeclaration": 8706,
              "src": "1112:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8706",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfdb6b04",
            "id": 49,
            "mutability": "mutable",
            "name": "getOracleInfo",
            "nameLocation": "1203:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "1165:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
              "typeString": "mapping(address => struct Aggregator.OracleInfo)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1173:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1165:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                "typeString": "mapping(address => struct Aggregator.OracleInfo)"
              },
              "valueType": {
                "id": 47,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 46,
                  "name": "OracleInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13,
                  "src": "1184:10:0"
                },
                "referencedDeclaration": 13,
                "src": "1184:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OracleInfo_$13_storage_ptr",
                  "typeString": "struct Aggregator.OracleInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "12c65b8c",
            "id": 55,
            "mutability": "mutable",
            "name": "getPaymentInfo",
            "nameLocation": "1296:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "1258:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
              "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 51,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8706,
                  "src": "1266:6:0"
                },
                "referencedDeclaration": 8706,
                "src": "1266:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$8706",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "1258:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo)"
              },
              "valueType": {
                "id": 53,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 52,
                  "name": "PaymentInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "1276:11:0"
                },
                "referencedDeclaration": 27,
                "src": "1276:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PaymentInfo_$27_storage_ptr",
                  "typeString": "struct Aggregator.PaymentInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "1370:99:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7712,
                            "src": "1396:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 60,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1416:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1416:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7780,
                          "src": "1388:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1388:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7941646d696e3a2062616420726f6c65",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1429:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b99e8be6064385eaa0c6dc9e749154ba3d243e50c59a38429cf5cb0e423018a1",
                          "typeString": "literal_string \"onlyAdmin: bad role\""
                        },
                        "value": "onlyAdmin: bad role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b99e8be6064385eaa0c6dc9e749154ba3d243e50c59a38429cf5cb0e423018a1",
                          "typeString": "literal_string \"onlyAdmin: bad role\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1380:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:71:0"
                },
                {
                  "id": 66,
                  "nodeType": "PlaceholderStatement",
                  "src": "1461:1:0"
                }
              ]
            },
            "id": 68,
            "name": "onlyAdmin",
            "nameLocation": "1360:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:0"
            },
            "src": "1351:118:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1494:93:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 72,
                            "name": "ORACLE_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1520:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 73,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1533:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1533:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 71,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7780,
                          "src": "1512:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1512:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c794f7261636c653a2062616420726f6c65",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1546:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5bb8ffea388408e7441695146763a488d75c8de8ffdb5ecc63eab929752c692",
                          "typeString": "literal_string \"onlyOracle: bad role\""
                        },
                        "value": "onlyOracle: bad role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5bb8ffea388408e7441695146763a488d75c8de8ffdb5ecc63eab929752c692",
                          "typeString": "literal_string \"onlyOracle: bad role\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1504:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1504:65:0"
                },
                {
                  "id": 79,
                  "nodeType": "PlaceholderStatement",
                  "src": "1579:1:0"
                }
              ]
            },
            "id": 81,
            "name": "onlyOracle",
            "nameLocation": "1483:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:0:0"
            },
            "src": "1474:113:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "2117:290:0",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "minConfirmations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2127:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "_minConfirmations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2146:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2127:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:36:0"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "coreToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2173:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "_coreToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2185:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2173:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:22:0"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "bonusToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2205:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "_bonusToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2218:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2205:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:24:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2239:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "_corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2253:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2239:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:26:0"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 113,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2275:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 114,
                      "name": "_bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2290:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2275:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7712,
                        "src": "2324:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2344:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2344:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 117,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "2313:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2313:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2313:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 124,
                        "name": "ORACLE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "2376:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2389:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2389:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 123,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "2365:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "2365:35:0"
                }
              ]
            },
            "documentation": {
              "id": 82,
              "nodeType": "StructuredDocumentation",
              "src": "1611:332:0",
              "text": "@dev Constructor that initializes the most important configurations.\n @param _minConfirmations Common confirmations count.\n @param _corePayment Oracle reward.\n @param _bonusPayment Oracle reward.\n @param _coreToken Link token to pay to oracles.\n @param _bonusToken DBR token to pay to oracles."
            },
            "id": 130,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_minConfirmations",
                  "nameLocation": "1977:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1969:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_corePayment",
                  "nameLocation": "2012:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2004:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_bonusPayment",
                  "nameLocation": "2042:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2034:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_coreToken",
                  "nameLocation": "2072:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2065:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 90,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "2065:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "2065:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_bonusToken",
                  "nameLocation": "2099:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2092:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 93,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "2092:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "2092:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1959:157:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2117:0:0"
            },
            "scope": 458,
            "src": "1948:459:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "2718:522:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 144,
                              "name": "getOracleInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "2749:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                                "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                              }
                            },
                            "id": 146,
                            "indexExpression": {
                              "id": 145,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "2763:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2749:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                              "typeString": "struct Aggregator.OracleInfo storage ref"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "admin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2749:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2781:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2781:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2749:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261775061796d656e743a206f6e6c792063616c6c61626c652062792061646d696e",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2805:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6ab32788b176d62ef2f29923206037886ff9b79473980f952883ee1a6a7f638",
                          "typeString": "literal_string \"withdrawPayment: only callable by admin\""
                        },
                        "value": "withdrawPayment: only callable by admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6ab32788b176d62ef2f29923206037886ff9b79473980f952883ee1a6a7f638",
                          "typeString": "literal_string \"withdrawPayment: only callable by admin\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2728:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2728:128:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2728:128:0"
                },
                {
                  "assignments": [
                    155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 155,
                      "mutability": "mutable",
                      "name": "available",
                      "nameLocation": "2874:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2866:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 154,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2866:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 156,
                          "name": "getOracleInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "2886:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                            "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                          }
                        },
                        "id": 158,
                        "indexExpression": {
                          "id": 157,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "2900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2886:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                          "typeString": "struct Aggregator.OracleInfo storage ref"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2886:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 161,
                    "indexExpression": {
                      "id": 160,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2918:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2886:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2866:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 164,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2956:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 165,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2969:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2956:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261775061796d656e743a20696e73756666696369656e7420776974686472617761626c652066756e6473",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2990:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c63d3898c0fb346e9acadcbc2ed41370cee415a408e3bca97d2d59bb870a2e4e",
                          "typeString": "literal_string \"withdrawPayment: insufficient withdrawable funds\""
                        },
                        "value": "withdrawPayment: insufficient withdrawable funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c63d3898c0fb346e9acadcbc2ed41370cee415a408e3bca97d2d59bb870a2e4e",
                          "typeString": "literal_string \"withdrawPayment: insufficient withdrawable funds\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2935:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2935:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2935:115:0"
                },
                {
                  "expression": {
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 170,
                            "name": "getOracleInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "3060:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                              "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                            }
                          },
                          "id": 172,
                          "indexExpression": {
                            "id": 171,
                            "name": "_oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3074:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3060:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                            "typeString": "struct Aggregator.OracleInfo storage ref"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "3060:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 175,
                      "indexExpression": {
                        "id": 174,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "3092:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3060:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 176,
                        "name": "available",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "3102:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 177,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3114:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3102:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3060:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:61:0"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 181,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "3131:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 183,
                        "indexExpression": {
                          "id": 182,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "3146:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3131:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocatedFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3131:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 185,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "3172:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3131:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 191,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3212:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 192,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3224:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 189,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "3196:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8706",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8655,
                          "src": "3196:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3196:36:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 188,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3189:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3189:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:44:0"
                }
              ]
            },
            "documentation": {
              "id": 131,
              "nodeType": "StructuredDocumentation",
              "src": "2413:159:0",
              "text": "@dev Withdraws oracle reward.\n @param _oracle Oracle address.\n @param _recipient Recepient reward.\n @param _amount Amount to withdraw."
            },
            "functionSelector": "4c083773",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayment",
            "nameLocation": "2586:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "2619:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2611:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "2644:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2636:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "2671:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2664:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 137,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 136,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "2664:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "2664:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2695:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2687:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2601:107:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2718:0:0"
            },
            "scope": 458,
            "src": "2577:663:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3471:203:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 206,
                              "name": "getOracleInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "3502:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                                "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                              }
                            },
                            "id": 208,
                            "indexExpression": {
                              "id": 207,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "3516:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3502:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                              "typeString": "struct Aggregator.OracleInfo storage ref"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "admin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "3502:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 210,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3534:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3534:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3502:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174654f7261636c6541646d696e3a206f6e6c792063616c6c61626c652062792061646d696e",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3558:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eae5d03529efd772b3498b768bfc7114a7437bc7242fe78939423709eb30fd18",
                          "typeString": "literal_string \"updateOracleAdmin: only callable by admin\""
                        },
                        "value": "updateOracleAdmin: only callable by admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eae5d03529efd772b3498b768bfc7114a7437bc7242fe78939423709eb30fd18",
                          "typeString": "literal_string \"updateOracleAdmin: only callable by admin\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3481:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3481:130:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:130:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 216,
                          "name": "getOracleInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "3621:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                            "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                          }
                        },
                        "id": 218,
                        "indexExpression": {
                          "id": 217,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3635:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3621:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                          "typeString": "struct Aggregator.OracleInfo storage ref"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "admin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "3621:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 220,
                      "name": "_newOracleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3652:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3621:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3621:46:0"
                }
              ]
            },
            "documentation": {
              "id": 198,
              "nodeType": "StructuredDocumentation",
              "src": "3246:130:0",
              "text": "@dev Updates oracle's admin address.\n @param _oracle Oracle address.\n @param _newOracleAdmin New oracle address."
            },
            "functionSelector": "e75a5926",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOracleAdmin",
            "nameLocation": "3390:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "3416:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3408:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_newOracleAdmin",
                  "nameLocation": "3433:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3425:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3407:42:0"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3471:0:0"
            },
            "scope": 458,
            "src": "3381:293:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "3790:152:0",
              "statements": [
                {
                  "expression": {
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 231,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "3800:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "id": 232,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "3815:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3800:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3800:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 239,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3877:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Aggregator_$458",
                                  "typeString": "contract Aggregator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Aggregator_$458",
                                  "typeString": "contract Aggregator"
                                }
                              ],
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3869:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 237,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3869:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3869:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 235,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "3852:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8706",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8645,
                          "src": "3852:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3852:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 242,
                            "name": "getPaymentInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "3898:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                              "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                            }
                          },
                          "id": 244,
                          "indexExpression": {
                            "id": 243,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "3913:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8706",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3898:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                            "typeString": "struct Aggregator.PaymentInfo storage ref"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allocatedFunds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "3898:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3852:83:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3800:135:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3800:135:0"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "3680:53:0",
              "text": "@dev Updates available rewards to be distributed."
            },
            "functionSelector": "7885f23b",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAvailableFunds",
            "nameLocation": "3747:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3775:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "3768:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 226,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "3768:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "3768:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3767:15:0"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3790:0:0"
            },
            "scope": 458,
            "src": "3738:204:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "4119:129:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 261,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "4137:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4137:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4153:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4137:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e7366657220646f65736e2774206163636570742063616c6c64617461",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4156:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_596684b4337a52c93ade0b2c259d39d006a0e559ec087cf0bdb790469756bb53",
                          "typeString": "literal_string \"transfer doesn't accept calldata\""
                        },
                        "value": "transfer doesn't accept calldata"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_596684b4337a52c93ade0b2c259d39d006a0e559ec087cf0bdb790469756bb53",
                          "typeString": "literal_string \"transfer doesn't accept calldata\""
                        }
                      ],
                      "id": 260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4129:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4129:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "4129:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 270,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4229:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4229:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 269,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8706,
                          "src": "4222:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$8706_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4222:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 268,
                      "name": "updateAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "4201:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8706_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:40:0"
                }
              ]
            },
            "documentation": {
              "id": 251,
              "nodeType": "StructuredDocumentation",
              "src": "3948:62:0",
              "text": "@dev Updates link balance.\n @param _data Call data."
            },
            "functionSelector": "a4c0ed36",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onTokenTransfer",
            "nameLocation": "4024:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "4049:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4049:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "4066:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4098:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "4083:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4083:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4039:70:0"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4119:0:0"
            },
            "scope": 458,
            "src": "4015:233:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "4524:323:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 292,
                                  "name": "getPaymentInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "4563:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                                    "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                                  }
                                },
                                "id": 294,
                                "indexExpression": {
                                  "id": 293,
                                  "name": "_asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "4578:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$8706",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4563:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                                  "typeString": "struct Aggregator.PaymentInfo storage ref"
                                }
                              },
                              "id": 295,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableFunds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "4563:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4555:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 290,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4555:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4555:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 297,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "4605:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4555:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746756e64733a20696e73756666696369656e7420726573657276652066756e6473",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4626:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e785bf7004f34962d4d02bef29674c37c057eb73146ebc5be3fe661469920fbd",
                          "typeString": "literal_string \"withdrawFunds: insufficient reserve funds\""
                        },
                        "value": "withdrawFunds: insufficient reserve funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e785bf7004f34962d4d02bef29674c37c057eb73146ebc5be3fe661469920fbd",
                          "typeString": "literal_string \"withdrawFunds: insufficient reserve funds\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4534:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4534:145:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "4534:145:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 305,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "4726:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 306,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "4738:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 303,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "4710:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8706",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8655,
                          "src": "4710:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4710:36:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746756e64733a207472616e73666572206661696c6564",
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4760:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ce24506701472e8e320e640e8d3586694f1a617f797058c8b082962cf89ccd",
                          "typeString": "literal_string \"withdrawFunds: transfer failed\""
                        },
                        "value": "withdrawFunds: transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ce24506701472e8e320e640e8d3586694f1a617f797058c8b082962cf89ccd",
                          "typeString": "literal_string \"withdrawFunds: transfer failed\""
                        }
                      ],
                      "id": 302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4689:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4689:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "4689:113:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 312,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "4833:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 311,
                      "name": "updateAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "4812:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8706_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4812:28:0"
                }
              ]
            },
            "documentation": {
              "id": 277,
              "nodeType": "StructuredDocumentation",
              "src": "4271:122:0",
              "text": "@dev Withdraws earned LINK's.\n @param _recipient Reward's recepient.\n @param _amount Amount to withdraw."
            },
            "functionSelector": "1c20fadd",
            "id": 316,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 287,
                "modifierName": {
                  "id": 286,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "4512:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4512:11:0"
              }
            ],
            "name": "withdrawFunds",
            "nameLocation": "4407:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "4437:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "4430:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 278,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "4430:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "4430:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "4461:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "4453:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4453:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4489:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "4481:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4481:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4420:82:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4524:0:0"
            },
            "scope": 458,
            "src": "4398:449:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "5028:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 324,
                      "name": "minConfirmations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "5038:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 325,
                      "name": "_minConfirmations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "5057:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5038:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "5038:36:0"
                }
              ]
            },
            "documentation": {
              "id": 317,
              "nodeType": "StructuredDocumentation",
              "src": "4853:97:0",
              "text": "@dev Sets minimal required confirmations.\n @param _minConfirmations Confirmation info."
            },
            "functionSelector": "d2821655",
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 322,
                "modifierName": {
                  "id": 321,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "5018:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5018:9:0"
              }
            ],
            "name": "setMinConfirmations",
            "nameLocation": "4964:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_minConfirmations",
                  "nameLocation": "4992:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "4984:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4984:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4983:27:0"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5028:0:0"
            },
            "scope": 458,
            "src": "4955:126:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "5315:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 339,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "5325:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 340,
                      "name": "_corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "5339:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5325:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "5325:26:0"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 343,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "5361:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 344,
                      "name": "_bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 334,
                      "src": "5376:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5361:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "5361:28:0"
                }
              ]
            },
            "documentation": {
              "id": 330,
              "nodeType": "StructuredDocumentation",
              "src": "5087:119:0",
              "text": "@dev Sets new oracle reward.\n @param _corePayment Oracle reward.\n @param _bonusPayment Oracle reward."
            },
            "functionSelector": "33e20756",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 337,
                "modifierName": {
                  "id": 336,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "5301:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5301:9:0"
              }
            ],
            "name": "setPayment",
            "nameLocation": "5220:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "_corePayment",
                  "nameLocation": "5239:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "5231:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5231:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "_bonusPayment",
                  "nameLocation": "5261:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "5253:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5253:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5230:45:0"
            },
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5315:0:0"
            },
            "scope": 458,
            "src": "5211:185:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "5578:95:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 359,
                        "name": "ORACLE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "5598:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 360,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "5611:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 358,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7821,
                      "src": "5588:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5588:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "5588:31:0"
                },
                {
                  "expression": {
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 363,
                          "name": "getOracleInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "5629:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                            "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                          }
                        },
                        "id": 365,
                        "indexExpression": {
                          "id": 364,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 351,
                          "src": "5643:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5629:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                          "typeString": "struct Aggregator.OracleInfo storage ref"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "admin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "5629:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 367,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "5660:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5629:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "5629:37:0"
                }
              ]
            },
            "documentation": {
              "id": 349,
              "nodeType": "StructuredDocumentation",
              "src": "5402:100:0",
              "text": "@dev Add new oracle.\n @param _oracle Oracle address.\n @param _admin Admin address."
            },
            "functionSelector": "f0ca4adb",
            "id": 371,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 356,
                "modifierName": {
                  "id": 355,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "5568:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5568:9:0"
              }
            ],
            "name": "addOracle",
            "nameLocation": "5516:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "5534:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "5526:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "5551:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "5543:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5543:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5525:33:0"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5578:0:0"
            },
            "scope": 458,
            "src": "5507:166:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "5804:49:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 380,
                        "name": "ORACLE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "5825:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 381,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5838:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 379,
                      "name": "revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7847,
                      "src": "5814:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5814:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "5814:32:0"
                }
              ]
            },
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "5679:62:0",
              "text": "@dev Remove oracle.\n @param _oracle Oracle address."
            },
            "functionSelector": "fdc85fc4",
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 377,
                "modifierName": {
                  "id": 376,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "5794:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5794:9:0"
              }
            ],
            "name": "removeOracle",
            "nameLocation": "5755:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "5776:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "5768:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5768:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5767:17:0"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5804:0:0"
            },
            "scope": 458,
            "src": "5746:107:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "6004:407:0",
              "statements": [
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 391,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6014:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 393,
                        "indexExpression": {
                          "id": 392,
                          "name": "coreToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "6029:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6014:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "6014:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 395,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "6058:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6014:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "6014:55:0"
                },
                {
                  "expression": {
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 398,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6079:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 400,
                        "indexExpression": {
                          "id": 399,
                          "name": "coreToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "6094:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6079:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocatedFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "6079:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 402,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "6123:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6079:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "6079:55:0"
                },
                {
                  "expression": {
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 405,
                            "name": "getOracleInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6144:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                              "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                            }
                          },
                          "id": 407,
                          "indexExpression": {
                            "id": 406,
                            "name": "_oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 388,
                            "src": "6158:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6144:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                            "typeString": "struct Aggregator.OracleInfo storage ref"
                          }
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "6144:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 410,
                      "indexExpression": {
                        "id": 409,
                        "name": "coreToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "6176:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6144:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 411,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "6190:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6144:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "6144:57:0"
                },
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 414,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6211:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 416,
                        "indexExpression": {
                          "id": 415,
                          "name": "bonusToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6226:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6211:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "6211:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 418,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "6256:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6211:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "6211:57:0"
                },
                {
                  "expression": {
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 421,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6278:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 423,
                        "indexExpression": {
                          "id": 422,
                          "name": "bonusToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6293:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6278:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocatedFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "6278:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 425,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "6323:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6278:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "6278:57:0"
                },
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 428,
                            "name": "getOracleInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6345:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                              "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                            }
                          },
                          "id": 430,
                          "indexExpression": {
                            "id": 429,
                            "name": "_oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 388,
                            "src": "6359:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6345:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                            "typeString": "struct Aggregator.OracleInfo storage ref"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "6345:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 433,
                      "indexExpression": {
                        "id": 432,
                        "name": "bonusToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "6377:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6345:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 434,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "6392:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6345:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "6345:59:0"
                }
              ]
            },
            "documentation": {
              "id": 386,
              "nodeType": "StructuredDocumentation",
              "src": "5879:74:0",
              "text": "@dev Assess teh oracle rewards.\n @param _oracle Oracle address."
            },
            "id": 438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOracle",
            "nameLocation": "5967:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "5986:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "5978:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5977:17:0"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6004:0:0"
            },
            "scope": 458,
            "src": "5958:453:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "6658:63:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 449,
                          "name": "getOracleInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "6675:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                            "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                          }
                        },
                        "id": 451,
                        "indexExpression": {
                          "id": 450,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "6689:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6675:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                          "typeString": "struct Aggregator.OracleInfo storage ref"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "6675:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "id": 453,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "6707:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6675:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 448,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "6668:46:0"
                }
              ]
            },
            "documentation": {
              "id": 439,
              "nodeType": "StructuredDocumentation",
              "src": "6433:103:0",
              "text": "@dev Return's oracle reward.\n @param _oracle Oracle address.\n @return Oracle rewards."
            },
            "functionSelector": "a490c5ac",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawable",
            "nameLocation": "6550:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "6573:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6566:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 441,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 440,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "6566:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "6566:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "6589:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6581:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6581:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6565:32:0"
            },
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6645:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6645:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6644:9:0"
            },
            "scope": 458,
            "src": "6541:180:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 459,
        "src": "174:6549:0"
      }
    ],
    "src": "32:6692:0"
  },
  "legacyAST": {
    "absolutePath": "/root/debridge-contracts/contracts/chainlink/Aggregator.sol",
    "exportedSymbols": {
      "AccessControl": [
        7970
      ],
      "Aggregator": [
        458
      ],
      "Context": [
        9249
      ],
      "ERC165": [
        9273
      ],
      "IAccessControl": [
        7690
      ],
      "IERC165": [
        9285
      ],
      "IERC20": [
        8706
      ]
    },
    "id": 459,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 459,
        "sourceUnit": 7971,
        "src": "57:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 459,
        "sourceUnit": 8707,
        "src": "116:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7970,
              "src": "197:13:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "197:13:0"
          }
        ],
        "contractDependencies": [
          7690,
          7970,
          9249,
          9273,
          9285
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 458,
        "linearizedBaseContracts": [
          458,
          7970,
          9273,
          9285,
          7690,
          9249
        ],
        "name": "Aggregator",
        "nameLocation": "183:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Aggregator.OracleInfo",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "admin",
                "nameLocation": "253:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "245:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "balances",
                "nameLocation": "319:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "292:35:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                  "typeString": "mapping(contract IERC20 => uint256)"
                },
                "typeName": {
                  "id": 11,
                  "keyType": {
                    "id": 9,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "300:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "300:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "292:26:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                    "typeString": "mapping(contract IERC20 => uint256)"
                  },
                  "valueType": {
                    "id": 10,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OracleInfo",
            "nameLocation": "224:10:0",
            "nodeType": "StructDefinition",
            "scope": 458,
            "src": "217:129:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Aggregator.BlockConfirmationsInfo",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "count",
                "nameLocation": "399:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "391:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "391:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "requireExtraCheck",
                "nameLocation": "443:17:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "438:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 16,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "438:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "isConfirmed",
                "nameLocation": "519:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "494:36:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "typeName": {
                  "id": 20,
                  "keyType": {
                    "id": 18,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "494:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "valueType": {
                    "id": 19,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BlockConfirmationsInfo",
            "nameLocation": "358:22:0",
            "nodeType": "StructDefinition",
            "scope": 458,
            "src": "351:217:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Aggregator.PaymentInfo",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "allocatedFunds",
                "nameLocation": "610:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "602:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "availableFunds",
                "nameLocation": "677:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "669:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "669:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PaymentInfo",
            "nameLocation": "580:11:0",
            "nodeType": "StructDefinition",
            "scope": 458,
            "src": "573:176:0",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "07e2cea5",
            "id": 32,
            "mutability": "constant",
            "name": "ORACLE_ROLE",
            "nameLocation": "779:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "755:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 28,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "755:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f5241434c455f524f4c45",
                  "id": 30,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "803:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1",
                    "typeString": "literal_string \"ORACLE_ROLE\""
                  },
                  "value": "ORACLE_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1",
                    "typeString": "literal_string \"ORACLE_ROLE\""
                  }
                ],
                "id": 29,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "793:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "793:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08b8304b",
            "id": 34,
            "mutability": "mutable",
            "name": "corePayment",
            "nameLocation": "873:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "858:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "858:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cd283118",
            "id": 36,
            "mutability": "mutable",
            "name": "bonusPayment",
            "nameLocation": "935:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "920:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "920:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7c4393e",
            "id": 38,
            "mutability": "mutable",
            "name": "minConfirmations",
            "nameLocation": "1003:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "988:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "988:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c2b72e9",
            "id": 41,
            "mutability": "mutable",
            "name": "coreToken",
            "nameLocation": "1073:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "1059:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8706",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 40,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8706,
                "src": "1059:6:0"
              },
              "referencedDeclaration": 8706,
              "src": "1059:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8706",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "41d4a1ab",
            "id": 44,
            "mutability": "mutable",
            "name": "bonusToken",
            "nameLocation": "1126:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "1112:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$8706",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 43,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8706,
                "src": "1112:6:0"
              },
              "referencedDeclaration": 8706,
              "src": "1112:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$8706",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfdb6b04",
            "id": 49,
            "mutability": "mutable",
            "name": "getOracleInfo",
            "nameLocation": "1203:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "1165:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
              "typeString": "mapping(address => struct Aggregator.OracleInfo)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1173:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1165:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                "typeString": "mapping(address => struct Aggregator.OracleInfo)"
              },
              "valueType": {
                "id": 47,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 46,
                  "name": "OracleInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13,
                  "src": "1184:10:0"
                },
                "referencedDeclaration": 13,
                "src": "1184:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OracleInfo_$13_storage_ptr",
                  "typeString": "struct Aggregator.OracleInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "12c65b8c",
            "id": 55,
            "mutability": "mutable",
            "name": "getPaymentInfo",
            "nameLocation": "1296:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 458,
            "src": "1258:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
              "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 51,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8706,
                  "src": "1266:6:0"
                },
                "referencedDeclaration": 8706,
                "src": "1266:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$8706",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "1258:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo)"
              },
              "valueType": {
                "id": 53,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 52,
                  "name": "PaymentInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "1276:11:0"
                },
                "referencedDeclaration": 27,
                "src": "1276:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PaymentInfo_$27_storage_ptr",
                  "typeString": "struct Aggregator.PaymentInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "1370:99:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7712,
                            "src": "1396:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 60,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1416:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1416:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7780,
                          "src": "1388:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1388:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7941646d696e3a2062616420726f6c65",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1429:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b99e8be6064385eaa0c6dc9e749154ba3d243e50c59a38429cf5cb0e423018a1",
                          "typeString": "literal_string \"onlyAdmin: bad role\""
                        },
                        "value": "onlyAdmin: bad role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b99e8be6064385eaa0c6dc9e749154ba3d243e50c59a38429cf5cb0e423018a1",
                          "typeString": "literal_string \"onlyAdmin: bad role\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1380:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:71:0"
                },
                {
                  "id": 66,
                  "nodeType": "PlaceholderStatement",
                  "src": "1461:1:0"
                }
              ]
            },
            "id": 68,
            "name": "onlyAdmin",
            "nameLocation": "1360:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:0"
            },
            "src": "1351:118:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1494:93:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 72,
                            "name": "ORACLE_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1520:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 73,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1533:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1533:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 71,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7780,
                          "src": "1512:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1512:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c794f7261636c653a2062616420726f6c65",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1546:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5bb8ffea388408e7441695146763a488d75c8de8ffdb5ecc63eab929752c692",
                          "typeString": "literal_string \"onlyOracle: bad role\""
                        },
                        "value": "onlyOracle: bad role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5bb8ffea388408e7441695146763a488d75c8de8ffdb5ecc63eab929752c692",
                          "typeString": "literal_string \"onlyOracle: bad role\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1504:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1504:65:0"
                },
                {
                  "id": 79,
                  "nodeType": "PlaceholderStatement",
                  "src": "1579:1:0"
                }
              ]
            },
            "id": 81,
            "name": "onlyOracle",
            "nameLocation": "1483:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:0:0"
            },
            "src": "1474:113:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "2117:290:0",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "minConfirmations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2127:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "_minConfirmations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2146:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2127:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:36:0"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "coreToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2173:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "_coreToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2185:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2173:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:22:0"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "bonusToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2205:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "_bonusToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2218:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2205:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:24:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2239:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "_corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2253:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2239:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:26:0"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 113,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2275:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 114,
                      "name": "_bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2290:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2275:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7712,
                        "src": "2324:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2344:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2344:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 117,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "2313:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2313:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2313:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 124,
                        "name": "ORACLE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "2376:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2389:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2389:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 123,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "2365:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "2365:35:0"
                }
              ]
            },
            "documentation": {
              "id": 82,
              "nodeType": "StructuredDocumentation",
              "src": "1611:332:0",
              "text": "@dev Constructor that initializes the most important configurations.\n @param _minConfirmations Common confirmations count.\n @param _corePayment Oracle reward.\n @param _bonusPayment Oracle reward.\n @param _coreToken Link token to pay to oracles.\n @param _bonusToken DBR token to pay to oracles."
            },
            "id": 130,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_minConfirmations",
                  "nameLocation": "1977:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1969:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_corePayment",
                  "nameLocation": "2012:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2004:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_bonusPayment",
                  "nameLocation": "2042:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2034:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_coreToken",
                  "nameLocation": "2072:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2065:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 90,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "2065:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "2065:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_bonusToken",
                  "nameLocation": "2099:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2092:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 93,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "2092:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "2092:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1959:157:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2117:0:0"
            },
            "scope": 458,
            "src": "1948:459:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "2718:522:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 144,
                              "name": "getOracleInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "2749:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                                "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                              }
                            },
                            "id": 146,
                            "indexExpression": {
                              "id": 145,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "2763:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2749:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                              "typeString": "struct Aggregator.OracleInfo storage ref"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "admin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2749:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2781:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2781:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2749:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261775061796d656e743a206f6e6c792063616c6c61626c652062792061646d696e",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2805:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6ab32788b176d62ef2f29923206037886ff9b79473980f952883ee1a6a7f638",
                          "typeString": "literal_string \"withdrawPayment: only callable by admin\""
                        },
                        "value": "withdrawPayment: only callable by admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6ab32788b176d62ef2f29923206037886ff9b79473980f952883ee1a6a7f638",
                          "typeString": "literal_string \"withdrawPayment: only callable by admin\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2728:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2728:128:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2728:128:0"
                },
                {
                  "assignments": [
                    155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 155,
                      "mutability": "mutable",
                      "name": "available",
                      "nameLocation": "2874:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2866:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 154,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2866:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 156,
                          "name": "getOracleInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "2886:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                            "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                          }
                        },
                        "id": 158,
                        "indexExpression": {
                          "id": 157,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "2900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2886:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                          "typeString": "struct Aggregator.OracleInfo storage ref"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2886:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 161,
                    "indexExpression": {
                      "id": 160,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2918:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2886:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2866:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 164,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "2956:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 165,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2969:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2956:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261775061796d656e743a20696e73756666696369656e7420776974686472617761626c652066756e6473",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2990:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c63d3898c0fb346e9acadcbc2ed41370cee415a408e3bca97d2d59bb870a2e4e",
                          "typeString": "literal_string \"withdrawPayment: insufficient withdrawable funds\""
                        },
                        "value": "withdrawPayment: insufficient withdrawable funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c63d3898c0fb346e9acadcbc2ed41370cee415a408e3bca97d2d59bb870a2e4e",
                          "typeString": "literal_string \"withdrawPayment: insufficient withdrawable funds\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2935:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2935:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2935:115:0"
                },
                {
                  "expression": {
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 170,
                            "name": "getOracleInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "3060:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                              "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                            }
                          },
                          "id": 172,
                          "indexExpression": {
                            "id": 171,
                            "name": "_oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3074:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3060:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                            "typeString": "struct Aggregator.OracleInfo storage ref"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "3060:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 175,
                      "indexExpression": {
                        "id": 174,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "3092:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3060:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 176,
                        "name": "available",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "3102:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 177,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3114:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3102:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3060:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:61:0"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 181,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "3131:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 183,
                        "indexExpression": {
                          "id": 182,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "3146:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3131:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocatedFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3131:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 185,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "3172:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3131:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 191,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3212:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 192,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3224:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 189,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "3196:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8706",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8655,
                          "src": "3196:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3196:36:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 188,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3189:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3189:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:44:0"
                }
              ]
            },
            "documentation": {
              "id": 131,
              "nodeType": "StructuredDocumentation",
              "src": "2413:159:0",
              "text": "@dev Withdraws oracle reward.\n @param _oracle Oracle address.\n @param _recipient Recepient reward.\n @param _amount Amount to withdraw."
            },
            "functionSelector": "4c083773",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayment",
            "nameLocation": "2586:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "2619:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2611:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "2644:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2636:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "2671:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2664:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 137,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 136,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "2664:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "2664:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2695:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2687:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2601:107:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2718:0:0"
            },
            "scope": 458,
            "src": "2577:663:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3471:203:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 206,
                              "name": "getOracleInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "3502:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                                "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                              }
                            },
                            "id": 208,
                            "indexExpression": {
                              "id": 207,
                              "name": "_oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "3516:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3502:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                              "typeString": "struct Aggregator.OracleInfo storage ref"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "admin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "3502:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 210,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3534:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3534:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3502:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174654f7261636c6541646d696e3a206f6e6c792063616c6c61626c652062792061646d696e",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3558:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eae5d03529efd772b3498b768bfc7114a7437bc7242fe78939423709eb30fd18",
                          "typeString": "literal_string \"updateOracleAdmin: only callable by admin\""
                        },
                        "value": "updateOracleAdmin: only callable by admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eae5d03529efd772b3498b768bfc7114a7437bc7242fe78939423709eb30fd18",
                          "typeString": "literal_string \"updateOracleAdmin: only callable by admin\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3481:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3481:130:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:130:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 216,
                          "name": "getOracleInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "3621:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                            "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                          }
                        },
                        "id": 218,
                        "indexExpression": {
                          "id": 217,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3635:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3621:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                          "typeString": "struct Aggregator.OracleInfo storage ref"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "admin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "3621:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 220,
                      "name": "_newOracleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3652:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3621:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3621:46:0"
                }
              ]
            },
            "documentation": {
              "id": 198,
              "nodeType": "StructuredDocumentation",
              "src": "3246:130:0",
              "text": "@dev Updates oracle's admin address.\n @param _oracle Oracle address.\n @param _newOracleAdmin New oracle address."
            },
            "functionSelector": "e75a5926",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOracleAdmin",
            "nameLocation": "3390:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "3416:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3408:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_newOracleAdmin",
                  "nameLocation": "3433:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3425:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3407:42:0"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3471:0:0"
            },
            "scope": 458,
            "src": "3381:293:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "3790:152:0",
              "statements": [
                {
                  "expression": {
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 231,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "3800:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "id": 232,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "3815:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3800:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3800:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 239,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3877:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Aggregator_$458",
                                  "typeString": "contract Aggregator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Aggregator_$458",
                                  "typeString": "contract Aggregator"
                                }
                              ],
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3869:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 237,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3869:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3869:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 235,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "3852:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8706",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8645,
                          "src": "3852:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3852:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 242,
                            "name": "getPaymentInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "3898:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                              "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                            }
                          },
                          "id": 244,
                          "indexExpression": {
                            "id": 243,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "3913:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8706",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3898:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                            "typeString": "struct Aggregator.PaymentInfo storage ref"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allocatedFunds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "3898:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3852:83:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3800:135:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3800:135:0"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "3680:53:0",
              "text": "@dev Updates available rewards to be distributed."
            },
            "functionSelector": "7885f23b",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAvailableFunds",
            "nameLocation": "3747:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "3775:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "3768:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 226,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "3768:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "3768:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3767:15:0"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3790:0:0"
            },
            "scope": 458,
            "src": "3738:204:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "4119:129:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 261,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "4137:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4137:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4153:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4137:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e7366657220646f65736e2774206163636570742063616c6c64617461",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4156:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_596684b4337a52c93ade0b2c259d39d006a0e559ec087cf0bdb790469756bb53",
                          "typeString": "literal_string \"transfer doesn't accept calldata\""
                        },
                        "value": "transfer doesn't accept calldata"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_596684b4337a52c93ade0b2c259d39d006a0e559ec087cf0bdb790469756bb53",
                          "typeString": "literal_string \"transfer doesn't accept calldata\""
                        }
                      ],
                      "id": 260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4129:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4129:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "4129:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 270,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4229:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4229:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 269,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8706,
                          "src": "4222:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$8706_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4222:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 268,
                      "name": "updateAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "4201:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8706_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:40:0"
                }
              ]
            },
            "documentation": {
              "id": 251,
              "nodeType": "StructuredDocumentation",
              "src": "3948:62:0",
              "text": "@dev Updates link balance.\n @param _data Call data."
            },
            "functionSelector": "a4c0ed36",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onTokenTransfer",
            "nameLocation": "4024:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "4049:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4049:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "4066:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4098:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "4083:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4083:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4039:70:0"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4119:0:0"
            },
            "scope": 458,
            "src": "4015:233:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "4524:323:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 292,
                                  "name": "getPaymentInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "4563:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                                    "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                                  }
                                },
                                "id": 294,
                                "indexExpression": {
                                  "id": 293,
                                  "name": "_asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "4578:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$8706",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4563:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                                  "typeString": "struct Aggregator.PaymentInfo storage ref"
                                }
                              },
                              "id": 295,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableFunds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "4563:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4555:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 290,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4555:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4555:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 297,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "4605:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4555:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746756e64733a20696e73756666696369656e7420726573657276652066756e6473",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4626:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e785bf7004f34962d4d02bef29674c37c057eb73146ebc5be3fe661469920fbd",
                          "typeString": "literal_string \"withdrawFunds: insufficient reserve funds\""
                        },
                        "value": "withdrawFunds: insufficient reserve funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e785bf7004f34962d4d02bef29674c37c057eb73146ebc5be3fe661469920fbd",
                          "typeString": "literal_string \"withdrawFunds: insufficient reserve funds\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4534:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4534:145:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "4534:145:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 305,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "4726:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 306,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "4738:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 303,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "4710:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$8706",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8655,
                          "src": "4710:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4710:36:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "776974686472617746756e64733a207472616e73666572206661696c6564",
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4760:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ce24506701472e8e320e640e8d3586694f1a617f797058c8b082962cf89ccd",
                          "typeString": "literal_string \"withdrawFunds: transfer failed\""
                        },
                        "value": "withdrawFunds: transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ce24506701472e8e320e640e8d3586694f1a617f797058c8b082962cf89ccd",
                          "typeString": "literal_string \"withdrawFunds: transfer failed\""
                        }
                      ],
                      "id": 302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4689:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4689:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "4689:113:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 312,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "4833:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 311,
                      "name": "updateAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "4812:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8706_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4812:28:0"
                }
              ]
            },
            "documentation": {
              "id": 277,
              "nodeType": "StructuredDocumentation",
              "src": "4271:122:0",
              "text": "@dev Withdraws earned LINK's.\n @param _recipient Reward's recepient.\n @param _amount Amount to withdraw."
            },
            "functionSelector": "1c20fadd",
            "id": 316,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 287,
                "modifierName": {
                  "id": 286,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "4512:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4512:11:0"
              }
            ],
            "name": "withdrawFunds",
            "nameLocation": "4407:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "4437:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "4430:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 278,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "4430:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "4430:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "4461:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "4453:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4453:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4489:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "4481:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4481:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4420:82:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4524:0:0"
            },
            "scope": 458,
            "src": "4398:449:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "5028:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 324,
                      "name": "minConfirmations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "5038:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 325,
                      "name": "_minConfirmations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "5057:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5038:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "5038:36:0"
                }
              ]
            },
            "documentation": {
              "id": 317,
              "nodeType": "StructuredDocumentation",
              "src": "4853:97:0",
              "text": "@dev Sets minimal required confirmations.\n @param _minConfirmations Confirmation info."
            },
            "functionSelector": "d2821655",
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 322,
                "modifierName": {
                  "id": 321,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "5018:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5018:9:0"
              }
            ],
            "name": "setMinConfirmations",
            "nameLocation": "4964:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_minConfirmations",
                  "nameLocation": "4992:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "4984:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4984:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4983:27:0"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5028:0:0"
            },
            "scope": 458,
            "src": "4955:126:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "5315:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 339,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "5325:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 340,
                      "name": "_corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "5339:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5325:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "5325:26:0"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 343,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "5361:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 344,
                      "name": "_bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 334,
                      "src": "5376:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5361:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "5361:28:0"
                }
              ]
            },
            "documentation": {
              "id": 330,
              "nodeType": "StructuredDocumentation",
              "src": "5087:119:0",
              "text": "@dev Sets new oracle reward.\n @param _corePayment Oracle reward.\n @param _bonusPayment Oracle reward."
            },
            "functionSelector": "33e20756",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 337,
                "modifierName": {
                  "id": 336,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "5301:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5301:9:0"
              }
            ],
            "name": "setPayment",
            "nameLocation": "5220:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "_corePayment",
                  "nameLocation": "5239:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "5231:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5231:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "_bonusPayment",
                  "nameLocation": "5261:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "5253:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5253:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5230:45:0"
            },
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5315:0:0"
            },
            "scope": 458,
            "src": "5211:185:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "5578:95:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 359,
                        "name": "ORACLE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "5598:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 360,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "5611:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 358,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7821,
                      "src": "5588:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5588:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "5588:31:0"
                },
                {
                  "expression": {
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 363,
                          "name": "getOracleInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "5629:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                            "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                          }
                        },
                        "id": 365,
                        "indexExpression": {
                          "id": 364,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 351,
                          "src": "5643:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5629:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                          "typeString": "struct Aggregator.OracleInfo storage ref"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "admin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "5629:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 367,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "5660:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5629:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "5629:37:0"
                }
              ]
            },
            "documentation": {
              "id": 349,
              "nodeType": "StructuredDocumentation",
              "src": "5402:100:0",
              "text": "@dev Add new oracle.\n @param _oracle Oracle address.\n @param _admin Admin address."
            },
            "functionSelector": "f0ca4adb",
            "id": 371,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 356,
                "modifierName": {
                  "id": 355,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "5568:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5568:9:0"
              }
            ],
            "name": "addOracle",
            "nameLocation": "5516:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "5534:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "5526:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "5551:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "5543:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5543:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5525:33:0"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5578:0:0"
            },
            "scope": 458,
            "src": "5507:166:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "5804:49:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 380,
                        "name": "ORACLE_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "5825:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 381,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "5838:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 379,
                      "name": "revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7847,
                      "src": "5814:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5814:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "5814:32:0"
                }
              ]
            },
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "5679:62:0",
              "text": "@dev Remove oracle.\n @param _oracle Oracle address."
            },
            "functionSelector": "fdc85fc4",
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 377,
                "modifierName": {
                  "id": 376,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "5794:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5794:9:0"
              }
            ],
            "name": "removeOracle",
            "nameLocation": "5755:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "5776:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "5768:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5768:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5767:17:0"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5804:0:0"
            },
            "scope": 458,
            "src": "5746:107:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "6004:407:0",
              "statements": [
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 391,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6014:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 393,
                        "indexExpression": {
                          "id": 392,
                          "name": "coreToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "6029:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6014:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "6014:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 395,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "6058:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6014:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "6014:55:0"
                },
                {
                  "expression": {
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 398,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6079:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 400,
                        "indexExpression": {
                          "id": 399,
                          "name": "coreToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "6094:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6079:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocatedFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "6079:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 402,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "6123:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6079:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "6079:55:0"
                },
                {
                  "expression": {
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 405,
                            "name": "getOracleInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6144:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                              "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                            }
                          },
                          "id": 407,
                          "indexExpression": {
                            "id": 406,
                            "name": "_oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 388,
                            "src": "6158:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6144:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                            "typeString": "struct Aggregator.OracleInfo storage ref"
                          }
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "6144:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 410,
                      "indexExpression": {
                        "id": 409,
                        "name": "coreToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "6176:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6144:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 411,
                      "name": "corePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "6190:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6144:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "6144:57:0"
                },
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 414,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6211:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 416,
                        "indexExpression": {
                          "id": 415,
                          "name": "bonusToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6226:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6211:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "6211:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 418,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "6256:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6211:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "6211:57:0"
                },
                {
                  "expression": {
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 421,
                          "name": "getPaymentInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6278:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_struct$_PaymentInfo_$27_storage_$",
                            "typeString": "mapping(contract IERC20 => struct Aggregator.PaymentInfo storage ref)"
                          }
                        },
                        "id": 423,
                        "indexExpression": {
                          "id": 422,
                          "name": "bonusToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "6293:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$8706",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6278:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInfo_$27_storage",
                          "typeString": "struct Aggregator.PaymentInfo storage ref"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocatedFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "6278:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 425,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "6323:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6278:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "6278:57:0"
                },
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 428,
                            "name": "getOracleInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6345:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                              "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                            }
                          },
                          "id": 430,
                          "indexExpression": {
                            "id": 429,
                            "name": "_oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 388,
                            "src": "6359:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6345:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                            "typeString": "struct Aggregator.OracleInfo storage ref"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "6345:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 433,
                      "indexExpression": {
                        "id": 432,
                        "name": "bonusToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "6377:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8706",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6345:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 434,
                      "name": "bonusPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "6392:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6345:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "6345:59:0"
                }
              ]
            },
            "documentation": {
              "id": 386,
              "nodeType": "StructuredDocumentation",
              "src": "5879:74:0",
              "text": "@dev Assess teh oracle rewards.\n @param _oracle Oracle address."
            },
            "id": 438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOracle",
            "nameLocation": "5967:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "5986:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "5978:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5977:17:0"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6004:0:0"
            },
            "scope": 458,
            "src": "5958:453:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "6658:63:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 449,
                          "name": "getOracleInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "6675:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleInfo_$13_storage_$",
                            "typeString": "mapping(address => struct Aggregator.OracleInfo storage ref)"
                          }
                        },
                        "id": 451,
                        "indexExpression": {
                          "id": 450,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "6689:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6675:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleInfo_$13_storage",
                          "typeString": "struct Aggregator.OracleInfo storage ref"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "6675:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$8706_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "id": 453,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "6707:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$8706",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6675:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 448,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "6668:46:0"
                }
              ]
            },
            "documentation": {
              "id": 439,
              "nodeType": "StructuredDocumentation",
              "src": "6433:103:0",
              "text": "@dev Return's oracle reward.\n @param _oracle Oracle address.\n @return Oracle rewards."
            },
            "functionSelector": "a490c5ac",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawable",
            "nameLocation": "6550:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "6573:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6566:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8706",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 441,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 440,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8706,
                      "src": "6566:6:0"
                    },
                    "referencedDeclaration": 8706,
                    "src": "6566:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8706",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "6589:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6581:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6581:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6565:32:0"
            },
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6645:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6645:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6644:9:0"
            },
            "scope": 458,
            "src": "6541:180:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 459,
        "src": "174:6549:0"
      }
    ],
    "src": "32:6692:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-20T15:43:29.251Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addOracle(address,address)": {
        "details": "Add new oracle.",
        "params": {
          "_admin": "Admin address.",
          "_oracle": "Oracle address."
        }
      },
      "constructor": {
        "details": "Constructor that initializes the most important configurations.",
        "params": {
          "_bonusPayment": "Oracle reward.",
          "_bonusToken": "DBR token to pay to oracles.",
          "_corePayment": "Oracle reward.",
          "_coreToken": "Link token to pay to oracles.",
          "_minConfirmations": "Common confirmations count."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getWithdrawable(address,address)": {
        "details": "Return's oracle reward.",
        "params": {
          "_oracle": "Oracle address."
        },
        "returns": {
          "_0": "Oracle rewards."
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "details": "Updates link balance.",
        "params": {
          "_data": "Call data."
        }
      },
      "removeOracle(address)": {
        "details": "Remove oracle.",
        "params": {
          "_oracle": "Oracle address."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setMinConfirmations(uint256)": {
        "details": "Sets minimal required confirmations.",
        "params": {
          "_minConfirmations": "Confirmation info."
        }
      },
      "setPayment(uint256,uint256)": {
        "details": "Sets new oracle reward.",
        "params": {
          "_bonusPayment": "Oracle reward.",
          "_corePayment": "Oracle reward."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "updateAvailableFunds(address)": {
        "details": "Updates available rewards to be distributed."
      },
      "updateOracleAdmin(address,address)": {
        "details": "Updates oracle's admin address.",
        "params": {
          "_newOracleAdmin": "New oracle address.",
          "_oracle": "Oracle address."
        }
      },
      "withdrawFunds(address,address,uint256)": {
        "details": "Withdraws earned LINK's.",
        "params": {
          "_amount": "Amount to withdraw.",
          "_recipient": "Reward's recepient."
        }
      },
      "withdrawPayment(address,address,address,uint256)": {
        "details": "Withdraws oracle reward.",
        "params": {
          "_amount": "Amount to withdraw.",
          "_oracle": "Oracle address.",
          "_recipient": "Recepient reward."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}